{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///../node_modules/downshift/dist/downshift.esm.js","webpack:///./node_modules/core-js/modules/_array-fill.js"],"names":["$export","__webpack_require__","P","fill","472","e","t","n","o","i","r","u","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_extends","assign","arguments","source","hasOwnProperty","call","objectWithoutProperties","keys","indexOf","possibleConstructorReturn","self","ReferenceError","toConsumableArray","arr","Array","isArray","arr2","from","statusDiv","document","getElementById","statuses","idCounter","cbToCb","cb","noop","getClosestScrollParent","findParent","finder","node","rootNode","parentNode","body","scrollTop","documentElement","bind","scrollHeight","clientHeight","composeEventHandlers","_len2","fns","_key2","event","_len3","args","_key3","some","fn","apply","concat","defaultPrevented","generateId","prefix","firstDefined","_len4","_key4","find","a","unwrapArray","arg","defaultValue","isDOMElement","element","nodeName","type","getElementProps","attributes","stateKeys","pickState","state","result","forEach","k","Downshift$1","_Component","Downshift","_ref","this","_len","_key","_this","__proto__","getPrototypeOf","_initialiseProps","getState","highlightedIndex","defaultHighlightedIndex","isOpen","defaultIsOpen","inputValue","defaultInputValue","selectedItem","defaultSelectedItem","itemToString","subClass","superClass","create","constructor","setPrototypeOf","react__WEBPACK_IMPORTED_MODULE_0__","_this2","stateToMerge","reduce","isControlledProp","itemCount","items","stateToSet","_this3","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","stateReducer","nextState","nextFullState","stateChangeTypes","unknown","onStateChange","onSelect","onChange","onUserAction","_getState","_props","id","getRootProps","getButtonProps","getLabelProps","getInputProps","getItemProps","openMenu","closeMenu","toggleMenu","selectItem","selectItemAtIndex","selectHighlightedItem","setHighlightedIndex","clearSelection","clearItems","reset","setItemCount","unsetItemCount","index","_this4","_isMounted","onMouseDown","isMouseDown","onMouseUp","_rootNode","contains","mouseUp","onOuterClick","environment","addEventListener","cleanup","removeEventListener","prevProps","prevState","selectedItemChanged","internalSetState","controlledPropUpdatedSelectedItem","current","prev","avoidScrolling","scrollHighlightedItemIntoView","updateStatus","children","render","called","refKey","suppressRefError","_ref2","refKeySpecified","isComposite","Error","react__WEBPACK_IMPORTED_MODULE_0___default","cloneElement","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","func","number","any","string","bool","getA11yStatusMessage","onClick","shape","activeElement","breakingChanges","resetInputOnSelection","defaultProps","highlightedItem","resultCount","previousResultCount","String","prevItem","item","window","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","timeoutId","_this5","root_handleClick","input","count","getItemNodeFromIndex","getItemId","otherStateToSet","scrollParent","scrollParentStyles","getComputedStyle","scrollParentRect","getBoundingClientRect","scrollParentBorderTopWidth","parseInt","borderTopWidth","bordersWidth","borderBottomWidth","scrollParentTop","top","nodeRect","bottom","nodeTop","height","openAndHighlightDefaultIndex","highlightDefaultIndex","moveHighlightedIndex","amount","changeHighlightedIndex","moveAmount","itemsLastIndex","getItemCount","baseIndex","newIndex","itemIndex","rootRef","_ref3","_ref4$suppressRefErro","_ref3$refKey","rest","keyDownHandlers","ArrowDown","preventDefault","shiftKey","ArrowUp","Enter","Escape","buttonKeyDownHandlers"," ","_ref5","onKeyDown","onBlur","eventHandlers","disabled","button_handleClick","button_handleKeyDown","button_handleBlur","role","aria-label","aria-expanded","aria-haspopup","focus","htmlFor","inputId","_ref7","_ref6","onInput","onChangeKey","Boolean","_getState4","input_handleChange","input_handleKeyDown","input_handleBlur","aria-autocomplete","aria-activedescendant","autoComplete","_ref8","onMouseMove","_ref8$item","fnName","propName","push","setTimeout","_ref9","_ref10","status","isSameAsLast","div","createElement","setAttribute","style","border","clip","margin","overflow","padding","position","width","appendChild","lastChild","removeChild","firstChild","filter","statusItem","display","childDiv","textContent","setStatus","clearTimeout","default","resetIdCounter","__webpack_exports__","D","656","toObject","toAbsoluteIndex","toLength","module","exports","O","aLen","end","endPos"],"mappings":"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","file":"4-7af9043311af85f13559.js","sourcesContent":["// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n// istanbul ignore next\nvar statusDiv = typeof document === 'undefined' ? null : document.getElementById('a11y-status-message');\n\nvar statuses = [];\n\nfunction setStatus(status) {\n  var isSameAsLast = statuses[statuses.length - 1] === status;\n  if (isSameAsLast) {\n    statuses = [].concat(toConsumableArray(statuses), [status]);\n  } else {\n    statuses = [status];\n  }\n  var div = getStatusDiv();\n\n  // Remove previous children\n  while (div.lastChild) {\n    div.removeChild(div.firstChild);\n  }\n\n  statuses.filter(Boolean).forEach(function (statusItem, index) {\n    div.appendChild(getStatusChildDiv(statusItem, index));\n  });\n}\n\nfunction getStatusChildDiv(status, index) {\n  var display = index === statuses.length - 1 ? 'block' : 'none';\n\n  var childDiv = document.createElement('div');\n  childDiv.style.display = display;\n  childDiv.textContent = status;\n\n  return childDiv;\n}\n\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv;\n  }\n  statusDiv = document.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'assertive');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  document.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nvar idCounter = 1;\n\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\nfunction noop() {}\n\nfunction findParent(finder, node, rootNode) {\n  if (node !== null && node !== rootNode.parentNode) {\n    if (finder(node)) {\n      if (node === document.body && node.scrollTop === 0) {\n        // in chrome body.scrollTop always return 0\n        return document.documentElement;\n      }\n      return node;\n    } else {\n      return findParent(finder, node.parentNode, rootNode);\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Get the closest element that scrolls\n * @param {HTMLElement} node - the child element to start searching for scroll parent at\n * @param {HTMLElement} rootNode - the root element of the component\n * @return {HTMLElement} the closest parentNode that scrolls\n */\nvar getClosestScrollParent = findParent.bind(null, function (node) {\n  return node.scrollHeight > node.clientHeight;\n});\n\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node - the element that should scroll into view\n * @param {HTMLElement} rootNode - the root element of the component\n * @param {Boolean} alignToTop - align element to the top of the visible area of the scrollable ancestor\n */\n// eslint-disable-next-line complexity\nfunction scrollIntoView(node, rootNode) {\n  var scrollParent = getClosestScrollParent(node, rootNode);\n  if (scrollParent === null) {\n    return;\n  }\n  var scrollParentStyles = getComputedStyle(scrollParent);\n  var scrollParentRect = scrollParent.getBoundingClientRect();\n  var scrollParentBorderTopWidth = parseInt(scrollParentStyles.borderTopWidth, 10);\n  var scrollParentBorderBottomWidth = parseInt(scrollParentStyles.borderBottomWidth, 10);\n  var bordersWidth = scrollParentBorderTopWidth + scrollParentBorderBottomWidth;\n  var scrollParentTop = scrollParentRect.top + scrollParentBorderTopWidth;\n  var nodeRect = node.getBoundingClientRect();\n\n  if (nodeRect.top < 0 && scrollParentRect.top < 0) {\n    scrollParent.scrollTop += nodeRect.top;\n    return;\n  }\n\n  if (nodeRect.top < 0) {\n    // the item is above the viewport and the parent is not above the viewport\n    scrollParent.scrollTop += nodeRect.top - scrollParentTop;\n    return;\n  }\n\n  if (nodeRect.top > 0 && scrollParentRect.top < 0) {\n    if (scrollParentRect.bottom > 0 && nodeRect.bottom + bordersWidth > scrollParentRect.bottom) {\n      // the item is below scrollable area\n      scrollParent.scrollTop += nodeRect.bottom - scrollParentRect.bottom + bordersWidth;\n    }\n    // item and parent top are on different sides of view top border (do nothing)\n    return;\n  }\n\n  var nodeOffsetTop = nodeRect.top + scrollParent.scrollTop;\n  var nodeTop = nodeOffsetTop - scrollParentTop;\n  if (nodeTop < scrollParent.scrollTop) {\n    // the item is above the scrollable area\n    scrollParent.scrollTop = nodeTop;\n  } else if (nodeTop + nodeRect.height + bordersWidth > scrollParent.scrollTop + scrollParentRect.height) {\n    // the item is below the scrollable area\n    scrollParent.scrollTop = nodeTop + nodeRect.height - scrollParentRect.height + bordersWidth;\n  }\n  // the item is within the scrollable area (do nothing)\n}\n\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\nfunction debounce(fn, time) {\n  var timeoutId = void 0;\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(undefined, args);\n    }, time);\n  };\n}\n\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls\n * `event.preventDefault()`. Not sure this is the best\n * way to do this, but it seems legit...\n * @param {Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\nfunction composeEventHandlers() {\n  for (var _len2 = arguments.length, fns = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(function (fn) {\n      fn && fn.apply(undefined, [event].concat(args));\n      return event.defaultPrevented;\n    });\n  };\n}\n\n/**\n * This generates a unique ID for all autocomplete inputs\n * @param {String} prefix the prefix for the id\n * @return {String} the unique ID\n */\nfunction generateId(prefix) {\n  return prefix + '-' + idCounter++;\n}\n\n/**\n * Resets idCounter to 0. Used for SSR.\n */\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n\n/**\n * Returns the first argument that is not undefined\n * @param {...*} args the arguments\n * @return {*} the defined value\n */\nfunction firstDefined() {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return args.find(function (a) {\n    return typeof a !== 'undefined';\n  });\n}\n\n// eslint-disable-next-line complexity\nfunction getA11yStatusMessage(_ref) {\n  var isOpen = _ref.isOpen,\n      highlightedItem = _ref.highlightedItem,\n      selectedItem = _ref.selectedItem,\n      resultCount = _ref.resultCount,\n      previousResultCount = _ref.previousResultCount,\n      itemToString = _ref.itemToString;\n\n  if (!isOpen) {\n    if (selectedItem) {\n      return itemToString(selectedItem);\n    } else {\n      return '';\n    }\n  }\n\n  if (!resultCount) {\n    return 'No results.';\n  } else if (!highlightedItem || resultCount !== previousResultCount) {\n    return resultCount + ' ' + (resultCount === 1 ? 'result is' : 'results are') + ' available, use up and down arrow keys to navigate.';\n  }\n  return itemToString(highlightedItem);\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */arg[0] : arg;\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\nfunction isDOMElement(element) {\n  /* istanbul ignore if */\n  if (element.nodeName) {\n    // then this is preact\n    return typeof element.nodeName === 'string';\n  } else {\n    // then we assume this is react\n    return typeof element.type === 'string';\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\nfunction getElementProps(element) {\n  // props for react, attributes for preact\n  return element.props || /* istanbul ignore next (preact) */element.attributes;\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nfunction requiredProp(fnName, propName) {\n  throw new Error('The property \"' + propName + '\" is required in \"' + fnName + '\"');\n}\n\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state The state object\n * @return {Object} State that is relevant to downshift\n */\nfunction pickState() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\n/* eslint camelcase:0 */\n\nvar Downshift$1 = function (_Component) {\n  inherits(Downshift, _Component);\n\n  function Downshift() {\n    var _ref;\n\n    classCallCheck(this, Downshift);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = possibleConstructorReturn(this, (_ref = Downshift.__proto__ || Object.getPrototypeOf(Downshift)).call.apply(_ref, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    var state = _this.getState({\n      highlightedIndex: _this.props.defaultHighlightedIndex,\n      isOpen: _this.props.defaultIsOpen,\n      inputValue: _this.props.defaultInputValue,\n      selectedItem: _this.props.defaultSelectedItem\n    });\n    if (state.selectedItem) {\n      state.inputValue = _this.props.itemToString(state.selectedItem);\n    }\n    _this.state = state;\n    return _this;\n  }\n  // itemCount can be changed asynchronously\n  // from within downshift (so it can't come from a prop)\n  // this is why we store it as an instance and use\n  // getItemCount rather than just use items.length\n  // (to support windowing + async)\n\n\n  createClass(Downshift, [{\n    key: 'getState',\n\n\n    /**\n     * Gets the state based on internal state or props\n     * If a state value is passed via props, then that\n     * is the value given, otherwise it's retrieved from\n     * stateToMerge\n     *\n     * This will perform a shallow merge of the given state object\n     * with the state coming from props\n     * (for the controlled component scenario)\n     * This is used in state updater functions so they're referencing\n     * the right state regardless of where it comes from.\n     *\n     * @param {Object} stateToMerge defaults to this.state\n     * @return {Object} the state\n     */\n    value: function getState() {\n      var _this2 = this;\n\n      var stateToMerge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.state;\n\n      return Object.keys(stateToMerge).reduce(function (state, key) {\n        state[key] = _this2.isControlledProp(key) ? _this2.props[key] : stateToMerge[key];\n        return state;\n      }, {});\n    }\n\n    /**\n     * This determines whether a prop is a \"controlled prop\" meaning it is\n     * state which is controlled by the outside of this component rather\n     * than within this component.\n     * @param {String} key the key to check\n     * @return {Boolean} whether it is a controlled controlled prop\n     */\n\n  }, {\n    key: 'isControlledProp',\n    value: function isControlledProp(key) {\n      return this.props[key] !== undefined;\n    }\n  }, {\n    key: 'getItemCount',\n    value: function getItemCount() {\n      // things read better this way. They're in priority order:\n      // 1. `this.itemCount`\n      // 2. `this.props.itemCount`\n      // 3. `this.items.length`\n      /* eslint-disable no-negated-condition */\n      if (this.itemCount != null) {\n        return this.itemCount;\n      } else if (this.props.itemCount !== undefined) {\n        return this.props.itemCount;\n      } else {\n        return this.items.length;\n      }\n      /* eslint-enable no-negated-condition */\n    }\n\n    // eslint-disable-next-line complexity\n\n  }, {\n    key: 'internalSetState',\n\n\n    // any piece of our state can live in two places:\n    // 1. Uncontrolled: it's internal (this.state)\n    //    We will call this.setState to update that state\n    // 2. Controlled: it's external (this.props)\n    //    We will call this.props.onStateChange to update that state\n    //\n    // In addition, we'll call this.props.onChange if the\n    // selectedItem is changed.\n    value: function internalSetState(stateToSet, cb) {\n      var _this3 = this;\n\n      var isItemSelected = void 0,\n          onChangeArg = void 0;\n\n      var onStateChangeArg = {};\n      var isStateToSetFunction = typeof stateToSet === 'function';\n\n      // we want to call `onInputValueChange` before the `setState` call\n      // so someone controlling the `inputValue` state gets notified of\n      // the input change as soon as possible. This avoids issues with\n      // preserving the cursor position.\n      // See https://github.com/paypal/downshift/issues/217 for more info.\n      if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n        this.props.onInputValueChange(stateToSet.inputValue, _extends({}, this.getStateAndHelpers(), stateToSet));\n      }\n      return this.setState(function (state) {\n        state = _this3.getState(state);\n        stateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet;\n\n        // Your own function that could modify the state that will be set.\n        stateToSet = _this3.props.stateReducer(state, stateToSet);\n\n        // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n        isItemSelected = stateToSet.hasOwnProperty('selectedItem');\n        // this keeps track of the object we want to call with setState\n        var nextState = {};\n        // this is just used to tell whether the state changed\n        var nextFullState = {};\n        // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n        if (isItemSelected && stateToSet.selectedItem !== state.selectedItem) {\n          onChangeArg = stateToSet.selectedItem;\n        }\n        stateToSet.type = stateToSet.type || Downshift.stateChangeTypes.unknown;\n\n        Object.keys(stateToSet).forEach(function (key) {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== stateToSet[key]) {\n            onStateChangeArg[key] = stateToSet[key];\n          }\n          // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n          if (key === 'type') {\n            return;\n          }\n          nextFullState[key] = stateToSet[key];\n          // if it's coming from props, then we don't care to set it internally\n          if (!_this3.isControlledProp(key)) {\n            nextState[key] = stateToSet[key];\n          }\n        });\n\n        // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n        if (isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          _this3.props.onInputValueChange(stateToSet.inputValue, _extends({}, _this3.getStateAndHelpers(), stateToSet));\n        }\n\n        return nextState;\n      }, function () {\n        // call the provided callback if it's a callback\n        cbToCb(cb)();\n\n        // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n        var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n        if (hasMoreStateThanType) {\n          _this3.props.onStateChange(onStateChangeArg, _this3.getStateAndHelpers());\n        }\n\n        if (isItemSelected) {\n          _this3.props.onSelect(stateToSet.selectedItem, _this3.getStateAndHelpers());\n        }\n\n        if (onChangeArg !== undefined) {\n          _this3.props.onChange(onChangeArg, _this3.getStateAndHelpers());\n        }\n        // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n        _this3.props.onUserAction(onStateChangeArg, _this3.getStateAndHelpers());\n      });\n    }\n  }, {\n    key: 'getStateAndHelpers',\n    value: function getStateAndHelpers() {\n      var _getState = this.getState(),\n          highlightedIndex = _getState.highlightedIndex,\n          inputValue = _getState.inputValue,\n          selectedItem = _getState.selectedItem,\n          isOpen = _getState.isOpen;\n\n      var _props = this.props,\n          id = _props.id,\n          itemToString = _props.itemToString;\n      var getRootProps = this.getRootProps,\n          getButtonProps = this.getButtonProps,\n          getLabelProps = this.getLabelProps,\n          getInputProps = this.getInputProps,\n          getItemProps = this.getItemProps,\n          openMenu = this.openMenu,\n          closeMenu = this.closeMenu,\n          toggleMenu = this.toggleMenu,\n          selectItem = this.selectItem,\n          selectItemAtIndex = this.selectItemAtIndex,\n          selectHighlightedItem = this.selectHighlightedItem,\n          setHighlightedIndex = this.setHighlightedIndex,\n          clearSelection = this.clearSelection,\n          clearItems = this.clearItems,\n          reset = this.reset,\n          setItemCount = this.setItemCount,\n          unsetItemCount = this.unsetItemCount;\n\n      return {\n        // prop getters\n        getRootProps: getRootProps,\n        getButtonProps: getButtonProps,\n        getLabelProps: getLabelProps,\n        getInputProps: getInputProps,\n        getItemProps: getItemProps,\n\n        // actions\n        reset: reset,\n        openMenu: openMenu,\n        closeMenu: closeMenu,\n        toggleMenu: toggleMenu,\n        selectItem: selectItem,\n        selectItemAtIndex: selectItemAtIndex,\n        selectHighlightedItem: selectHighlightedItem,\n        setHighlightedIndex: setHighlightedIndex,\n        clearSelection: clearSelection,\n        clearItems: clearItems,\n        setItemCount: setItemCount,\n        unsetItemCount: unsetItemCount,\n\n        //props\n        itemToString: itemToString,\n        id: id,\n\n        // state\n        highlightedIndex: highlightedIndex,\n        inputValue: inputValue,\n        isOpen: isOpen,\n        selectedItem: selectedItem\n      };\n    }\n\n    //////////////////////////// ROOT\n\n    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ROOT\n\n    //////////////////////////// BUTTON\n\n    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ BUTTON\n\n    /////////////////////////////// LABEL\n\n    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ LABEL\n\n    /////////////////////////////// INPUT\n\n  }, {\n    key: 'getItemId',\n\n    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ INPUT\n\n    /////////////////////////////// ITEM\n    value: function getItemId(index) {\n      return this.props.id + '-item-' + index;\n    }\n    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ITEM\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      // the _isMounted property is because we have `updateStatus` in a `debounce`\n      // and we don't want to update the status if the component has been umounted\n      this._isMounted = true;\n      // this.isMouseDown helps us track whether the mouse is currently held down.\n      // This is useful when the user clicks on an item in the list, but holds the mouse\n      // down long enough for the list to disappear (because the blur event fires on the input)\n      // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n      // trigger hiding the menu.\n      var onMouseDown = function () {\n        _this4.isMouseDown = true;\n      };\n      var onMouseUp = function (event) {\n        _this4.isMouseDown = false;\n        if ((event.target === _this4._rootNode || !_this4._rootNode.contains(event.target)) && _this4.getState().isOpen) {\n          _this4.reset({ type: Downshift.stateChangeTypes.mouseUp }, function () {\n            return _this4.props.onOuterClick(_this4.getStateAndHelpers());\n          });\n        }\n      };\n      this.props.environment.addEventListener('mousedown', onMouseDown);\n      this.props.environment.addEventListener('mouseup', onMouseUp);\n\n      this.cleanup = function () {\n        _this4._isMounted = false;\n        _this4.props.environment.removeEventListener('mousedown', onMouseDown);\n        _this4.props.environment.removeEventListener('mouseup', onMouseUp);\n      };\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.isControlledProp('selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n        this.internalSetState({\n          type: Downshift.stateChangeTypes.controlledPropUpdatedSelectedItem,\n          inputValue: this.props.itemToString(this.props.selectedItem)\n        });\n      }\n\n      var current = this.props.highlightedIndex === undefined ? this.state : this.props;\n      var prev = prevProps.highlightedIndex === undefined ? prevState : prevProps;\n\n      if (current.highlightedIndex !== prev.highlightedIndex && !this.avoidScrolling) {\n        this.scrollHighlightedItemIntoView();\n      }\n\n      this.updateStatus();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.cleanup(); // avoids memory leak\n    }\n\n    // eslint-disable-next-line complexity\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = unwrapArray(this.props.render || this.props.children, noop);\n      // because the items are rerendered every time we call the children\n      // we clear this out each render and\n      this.clearItems();\n      // we reset this so we know whether the user calls getRootProps during\n      // this render. If they do then we don't need to do anything,\n      // if they don't then we need to clone the element they return and\n      // apply the props for them.\n      this.getRootProps.called = false;\n      this.getRootProps.refKey = undefined;\n      this.getRootProps.suppressRefError = undefined;\n      // we do something similar for getLabelProps\n      this.getLabelProps.called = false;\n      // and something similar for getInputProps\n      this.getInputProps.called = false;\n      var element = unwrapArray(children(this.getStateAndHelpers()));\n      if (!element) {\n        return null;\n      }\n      if (this.getRootProps.called) {\n        if (!this.getRootProps.suppressRefError) {\n          validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n        }\n        return element;\n      } else if (isDOMElement(element)) {\n        // they didn't apply the root props, but we can clone\n        // this and apply the props ourselves\n        return React.cloneElement(element, this.getRootProps(getElementProps(element)));\n      } else {\n        // they didn't apply the root props, but they need to\n        // otherwise we can't query around the autocomplete\n        throw new Error('downshift: If you return a non-DOM element, you must use apply the getRootProps function');\n      }\n    }\n  }]);\n  return Downshift;\n}(Component);\n\nDownshift$1.propTypes = {\n  children: PropTypes.func,\n  render: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultSelectedItem: PropTypes.any,\n  defaultInputValue: PropTypes.string,\n  defaultIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onClick: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  breakingChanges: PropTypes.shape({\n    resetInputOnSelection: PropTypes.bool\n  })\n  /* eslint-enable */\n};\nDownshift$1.defaultProps = {\n  defaultHighlightedIndex: null,\n  defaultSelectedItem: null,\n  defaultInputValue: '',\n  defaultIsOpen: false,\n  getA11yStatusMessage: getA11yStatusMessage,\n  id: generateId('downshift'),\n  itemToString: function itemToString(i) {\n    if (i == null) {\n      return '';\n    }\n    if (process.env.NODE_ENV !== 'production' && isPlainObject(i)) {\n      //eslint-disable-next-line no-console\n      console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n    }\n    return String(i);\n  },\n  onStateChange: function onStateChange() {},\n  onInputValueChange: function onInputValueChange() {},\n  onUserAction: function onUserAction() {},\n  onChange: function onChange() {},\n  onSelect: function onSelect() {},\n  onOuterClick: function onOuterClick() {},\n  selectedItemChanged: function selectedItemChanged(prevItem, item) {\n    return prevItem !== item;\n  },\n  environment: typeof window === 'undefined' /* istanbul ignore next (ssr) */\n  ? {} : window,\n  stateReducer: function stateReducer(state, stateToSet) {\n    return stateToSet;\n  },\n  breakingChanges: {}\n};\nDownshift$1.stateChangeTypes = {\n  unknown: '__autocomplete_unknown__',\n  mouseUp: '__autocomplete_mouseup__',\n  itemMouseEnter: '__autocomplete_item_mouseenter__',\n  keyDownArrowUp: '__autocomplete_keydown_arrow_up__',\n  keyDownArrowDown: '__autocomplete_keydown_arrow_down__',\n  keyDownEscape: '__autocomplete_keydown_escape__',\n  keyDownEnter: '__autocomplete_keydown_enter__',\n  clickItem: '__autocomplete_click_item__',\n  blurInput: '__autocomplete_blur_input__',\n  changeInput: '__autocomplete_change_input__',\n  keyDownSpaceButton: '__autocomplete_keydown_space_button__',\n  clickButton: '__autocomplete_click_button__',\n  blurButton: '__autocomplete_blur_button__',\n  controlledPropUpdatedSelectedItem: '__autocomplete_controlled_prop_updated_selected_item__'\n};\n\nvar _initialiseProps = function () {\n  var _this5 = this;\n\n  this.root_handleClick = composeEventHandlers(this.props.onClick, this.root_handleClick);\n  this.input = null;\n  this.items = [];\n  this.itemCount = null;\n  this.previousResultCount = 0;\n\n  this.setItemCount = function (count) {\n    return _this5.itemCount = count;\n  };\n\n  this.unsetItemCount = function () {\n    return _this5.itemCount = null;\n  };\n\n  this.getItemNodeFromIndex = function (index) {\n    return _this5.props.environment.document.getElementById(_this5.getItemId(index));\n  };\n\n  this.setHighlightedIndex = function () {\n    var highlightedIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this5.props.defaultHighlightedIndex;\n    var otherStateToSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    otherStateToSet = pickState(otherStateToSet);\n    _this5.internalSetState(_extends({ highlightedIndex: highlightedIndex }, otherStateToSet));\n  };\n\n  this.scrollHighlightedItemIntoView = function () {\n    var node = _this5.getItemNodeFromIndex(_this5.getState().highlightedIndex);\n    var rootNode = _this5._rootNode;\n    scrollIntoView(node, rootNode);\n  };\n\n  this.openAndHighlightDefaultIndex = function () {\n    var otherStateToSet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _this5.setHighlightedIndex(undefined, _extends({ isOpen: true }, otherStateToSet));\n  };\n\n  this.highlightDefaultIndex = function () {\n    var otherStateToSet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _this5.setHighlightedIndex(undefined, otherStateToSet);\n  };\n\n  this.moveHighlightedIndex = function (amount, otherStateToSet) {\n    if (_this5.getState().isOpen) {\n      _this5.changeHighlightedIndex(amount, otherStateToSet);\n    } else {\n      _this5.openAndHighlightDefaultIndex(otherStateToSet);\n    }\n  };\n\n  this.changeHighlightedIndex = function (moveAmount, otherStateToSet) {\n    var itemsLastIndex = _this5.getItemCount() - 1;\n    if (itemsLastIndex < 0) {\n      return;\n    }\n\n    var _getState2 = _this5.getState(),\n        highlightedIndex = _getState2.highlightedIndex;\n\n    var baseIndex = highlightedIndex;\n    if (baseIndex === null) {\n      baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n    }\n    var newIndex = baseIndex + moveAmount;\n    if (newIndex < 0) {\n      newIndex = itemsLastIndex;\n    } else if (newIndex > itemsLastIndex) {\n      newIndex = 0;\n    }\n    _this5.setHighlightedIndex(newIndex, otherStateToSet);\n  };\n\n  this.clearSelection = function (cb) {\n    _this5.internalSetState({\n      selectedItem: null,\n      inputValue: '',\n      isOpen: false\n    }, cb);\n  };\n\n  this.selectItem = function (item, otherStateToSet, cb) {\n    otherStateToSet = pickState(otherStateToSet);\n    _this5.internalSetState(_extends({\n      isOpen: false,\n      highlightedIndex: _this5.props.defaultHighlightedIndex,\n      selectedItem: item,\n      inputValue: _this5.isControlledProp('selectedItem') && _this5.props.breakingChanges.resetInputOnSelection ? _this5.props.defaultInputValue : _this5.props.itemToString(item)\n    }, otherStateToSet), cb);\n  };\n\n  this.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n    var item = _this5.items[itemIndex];\n    if (item == null) {\n      return;\n    }\n    _this5.selectItem(item, otherStateToSet, cb);\n  };\n\n  this.selectHighlightedItem = function (otherStateToSet, cb) {\n    return _this5.selectItemAtIndex(_this5.getState().highlightedIndex, otherStateToSet, cb);\n  };\n\n  this.rootRef = function (node) {\n    return _this5._rootNode = node;\n  };\n\n  this.getRootProps = function () {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref4$suppressRefErro = _ref4.suppressRefError,\n        suppressRefError = _ref4$suppressRefErro === undefined ? false : _ref4$suppressRefErro;\n\n    var _ref3$refKey = _ref3.refKey,\n        refKey = _ref3$refKey === undefined ? 'ref' : _ref3$refKey,\n        rest = objectWithoutProperties(_ref3, ['refKey']);\n\n    // this is used in the render to know whether the user has called getRootProps.\n    // It uses that to know whether to apply the props automatically\n    _this5.getRootProps.called = true;\n    _this5.getRootProps.refKey = refKey;\n    _this5.getRootProps.suppressRefError = suppressRefError;\n    return _extends(defineProperty({}, refKey, _this5.rootRef), rest);\n  };\n\n  this.keyDownHandlers = {\n    ArrowDown: function ArrowDown(event) {\n      event.preventDefault();\n      var amount = event.shiftKey ? 5 : 1;\n      this.moveHighlightedIndex(amount, {\n        type: Downshift$1.stateChangeTypes.keyDownArrowDown\n      });\n    },\n    ArrowUp: function ArrowUp(event) {\n      event.preventDefault();\n      var amount = event.shiftKey ? -5 : -1;\n      this.moveHighlightedIndex(amount, {\n        type: Downshift$1.stateChangeTypes.keyDownArrowUp\n      });\n    },\n    Enter: function Enter(event) {\n      if (this.getState().isOpen) {\n        event.preventDefault();\n        this.selectHighlightedItem({\n          type: Downshift$1.stateChangeTypes.keyDownEnter\n        });\n      }\n    },\n    Escape: function Escape(event) {\n      event.preventDefault();\n      this.reset({ type: Downshift$1.stateChangeTypes.keyDownEscape });\n    }\n  };\n  this.buttonKeyDownHandlers = _extends({}, this.keyDownHandlers, {\n    ' ': function _(event) {\n      event.preventDefault();\n      this.toggleMenu({ type: Downshift$1.stateChangeTypes.keyDownSpaceButton });\n    }\n  });\n\n  this.getButtonProps = function () {\n    var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var onClick = _ref5.onClick,\n        onKeyDown = _ref5.onKeyDown,\n        onBlur = _ref5.onBlur,\n        rest = objectWithoutProperties(_ref5, ['onClick', 'onKeyDown', 'onBlur']);\n\n    var _getState3 = _this5.getState(),\n        isOpen = _getState3.isOpen;\n\n    var eventHandlers = rest.disabled ? {} : {\n      onClick: composeEventHandlers(onClick, _this5.button_handleClick),\n      onKeyDown: composeEventHandlers(onKeyDown, _this5.button_handleKeyDown),\n      onBlur: composeEventHandlers(onBlur, _this5.button_handleBlur)\n    };\n    return _extends({\n      type: 'button',\n      role: 'button',\n      'aria-label': isOpen ? 'close menu' : 'open menu',\n      'aria-expanded': isOpen,\n      'aria-haspopup': true\n    }, eventHandlers, rest);\n  };\n\n  this.button_handleKeyDown = function (event) {\n    if (_this5.buttonKeyDownHandlers[event.key]) {\n      _this5.buttonKeyDownHandlers[event.key].call(_this5, event);\n    }\n  };\n\n  this.button_handleClick = function (event) {\n    event.preventDefault();\n    // handle odd case for Safari and Firefox which\n    // don't give the button the focus properly.\n    /* istanbul ignore if (can't reasonably test this) */\n    if (_this5.props.environment.document.activeElement === _this5.props.environment.document.body) {\n      event.target.focus();\n    }\n    _this5.toggleMenu({ type: Downshift$1.stateChangeTypes.clickButton });\n  };\n\n  this.button_handleBlur = function () {\n    if (!_this5.isMouseDown) {\n      _this5.reset({ type: Downshift$1.stateChangeTypes.blurButton });\n    }\n  };\n\n  this.getLabelProps = function () {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _this5.getLabelProps.called = true;\n    if (_this5.getInputProps.called && props.htmlFor && props.htmlFor !== _this5.inputId) {\n      throw new Error('downshift: You provided the htmlFor of \"' + props.htmlFor + '\" for your label, but the id of your input is \"' + _this5.inputId + '\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.');\n    }\n    _this5.inputId = firstDefined(_this5.inputId, props.htmlFor, generateId('downshift-input'));\n    return _extends({}, props, {\n      htmlFor: _this5.inputId\n    });\n  };\n\n  this.getInputProps = function () {\n    var _ref7;\n\n    var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var onKeyDown = _ref6.onKeyDown,\n        onBlur = _ref6.onBlur,\n        onChange = _ref6.onChange,\n        onInput = _ref6.onInput,\n        rest = objectWithoutProperties(_ref6, ['onKeyDown', 'onBlur', 'onChange', 'onInput']);\n\n    _this5.getInputProps.called = true;\n    if (_this5.getLabelProps.called && rest.id && rest.id !== _this5.inputId) {\n      throw new Error('downshift: You provided the id of \"' + rest.id + '\" for your input, but the htmlFor of your label is \"' + _this5.inputId + '\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.');\n    }\n    _this5.inputId = firstDefined(_this5.inputId, rest.id, generateId('downshift-input'));\n    // the boolean cast here is necessary due to a weird deal with\n    // babel-plugin-istanbul + preval.macro. No idea...\n    var isPreact = Boolean(false);\n    var onChangeKey = isPreact /* istanbul ignore next (preact) */\n    ? 'onInput' : 'onChange';\n\n    var _getState4 = _this5.getState(),\n        inputValue = _getState4.inputValue,\n        isOpen = _getState4.isOpen,\n        highlightedIndex = _getState4.highlightedIndex;\n\n    var eventHandlers = rest.disabled ? {} : (_ref7 = {}, defineProperty(_ref7, onChangeKey, composeEventHandlers(onChange, onInput, _this5.input_handleChange)), defineProperty(_ref7, 'onKeyDown', composeEventHandlers(onKeyDown, _this5.input_handleKeyDown)), defineProperty(_ref7, 'onBlur', composeEventHandlers(onBlur, _this5.input_handleBlur)), _ref7);\n    return _extends({\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-expanded': isOpen,\n      'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this5.getItemId(highlightedIndex) : null,\n      autoComplete: 'off',\n      value: inputValue\n    }, eventHandlers, rest, {\n      id: _this5.inputId\n    });\n  };\n\n  this.input_handleKeyDown = function (event) {\n    if (event.key && _this5.keyDownHandlers[event.key]) {\n      _this5.keyDownHandlers[event.key].call(_this5, event);\n    }\n  };\n\n  this.input_handleChange = function (event) {\n    _this5.internalSetState({\n      type: Downshift$1.stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue: event.target.value\n    });\n  };\n\n  this.input_handleBlur = function () {\n    if (!_this5.isMouseDown) {\n      _this5.reset({ type: Downshift$1.stateChangeTypes.blurInput });\n    }\n  };\n\n  this.getItemProps = function () {\n    var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var onMouseMove = _ref8.onMouseMove,\n        onMouseDown = _ref8.onMouseDown,\n        onClick = _ref8.onClick,\n        index = _ref8.index,\n        _ref8$item = _ref8.item,\n        item = _ref8$item === undefined ? requiredProp('getItemProps', 'item') : _ref8$item,\n        rest = objectWithoutProperties(_ref8, ['onMouseMove', 'onMouseDown', 'onClick', 'index', 'item']);\n\n    if (index === undefined) {\n      _this5.items.push(item);\n      index = _this5.items.indexOf(item);\n    } else {\n      _this5.items[index] = item;\n    }\n    return _extends({\n      id: _this5.getItemId(index),\n      // onMouseMove is used over onMouseEnter here. onMouseMove\n      // is only triggered on actual mouse movement while onMouseEnter\n      // can fire on DOM changes, interrupting keyboard navigation\n      onMouseMove: composeEventHandlers(onMouseMove, function () {\n        if (index === _this5.getState().highlightedIndex) {\n          return;\n        }\n        _this5.setHighlightedIndex(index, {\n          type: Downshift$1.stateChangeTypes.itemMouseEnter\n        });\n\n        // We never want to manually scroll when changing state based\n        // on `onMouseMove` because we will be moving the element out\n        // from under the user which is currently scrolling/moving the\n        // cursor\n        _this5.avoidScrolling = true;\n        setTimeout(function () {\n          return _this5.avoidScrolling = false;\n        }, 250);\n      }),\n      onMouseDown: composeEventHandlers(onMouseDown, function (event) {\n        // This prevents the activeElement from being changed\n        // to the item so it can remain with the current activeElement\n        // which is a more common use case.\n        event.preventDefault();\n      }),\n      onClick: composeEventHandlers(onClick, function () {\n        _this5.selectItemAtIndex(index, {\n          type: Downshift$1.stateChangeTypes.clickItem\n        });\n      })\n    }, rest);\n  };\n\n  this.clearItems = function () {\n    _this5.items = [];\n  };\n\n  this.reset = function () {\n    var otherStateToSet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var cb = arguments[1];\n\n    otherStateToSet = pickState(otherStateToSet);\n    _this5.internalSetState(function (_ref9) {\n      var selectedItem = _ref9.selectedItem;\n      return _extends({\n        isOpen: false,\n        highlightedIndex: _this5.props.defaultHighlightedIndex,\n        inputValue: _this5.props.itemToString(selectedItem)\n      }, otherStateToSet);\n    }, cbToCb(cb));\n  };\n\n  this.toggleMenu = function () {\n    var otherStateToSet = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var cb = arguments[1];\n\n    otherStateToSet = pickState(otherStateToSet);\n    _this5.internalSetState(function (_ref10) {\n      var isOpen = _ref10.isOpen;\n\n      return _extends({ isOpen: !isOpen }, otherStateToSet);\n    }, function () {\n      var _getState5 = _this5.getState(),\n          isOpen = _getState5.isOpen;\n\n      if (isOpen) {\n        _this5.highlightDefaultIndex();\n      }\n      cbToCb(cb)();\n    });\n  };\n\n  this.openMenu = function (cb) {\n    _this5.internalSetState({ isOpen: true }, cbToCb(cb));\n  };\n\n  this.closeMenu = function (cb) {\n    _this5.internalSetState({ isOpen: false }, cbToCb(cb));\n  };\n\n  this.updateStatus = debounce(function () {\n    if (!_this5._isMounted) {\n      return;\n    }\n    var state = _this5.getState();\n    var item = _this5.items[state.highlightedIndex] || {};\n    var resultCount = _this5.getItemCount();\n    var status = _this5.props.getA11yStatusMessage(_extends({\n      itemToString: _this5.props.itemToString,\n      previousResultCount: _this5.previousResultCount,\n      resultCount: resultCount,\n      highlightedItem: item\n    }, state));\n    _this5.previousResultCount = resultCount;\n    setStatus(status);\n  }, 200);\n};\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref2) {\n  var refKey = _ref2.refKey;\n\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n  if (isComposite && !refKeySpecified) {\n    throw new Error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    throw new Error('downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"' + refKey + '\"');\n  }\n  if (!getElementProps(element)[refKey]) {\n    throw new Error('downshift: You must apply the ref prop \"' + refKey + '\" from getRootProps onto your root element.');\n  }\n}\n\n/*\n * Fix importing in typescript after rollup compilation\n * https://github.com/rollup/rollup/issues/1156\n * https://github.com/Microsoft/TypeScript/issues/13017#issuecomment-268657860\n */\nDownshift$1.default = Downshift$1;\nDownshift$1.resetIdCounter = resetIdCounter;\n\nexport default Downshift$1;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n"],"sourceRoot":""}