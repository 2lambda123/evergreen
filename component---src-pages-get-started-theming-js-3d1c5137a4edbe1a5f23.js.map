{"version":3,"sources":["webpack:///./src/pages/get-started/theming.js","webpack:///./src/components/Sidebar.js","webpack:///./src/components/GetStartedSidebar.js"],"names":["NativeLink","props","target","rel","className","style","marginBottom","href","Sidebar","render","this","groups","children","map","group","key","title","links","label","to","exact","activeClassName","PureComponent","defaultProps","GetStartedSidebar"],"mappings":"mLAOMA,EAAa,SAAC,GAAkB,IAAbC,EAAY,oBACnC,OAAO,qCAAGC,OAAO,SAASC,IAAI,uBAA0BF,KAG3C,qBACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uDAEF,yBAAKG,UAAU,cACb,kBAAC,IAAD,MACA,0BAAMA,UAAU,mBACd,yBAAKA,UAAU,sBACb,6BAASA,UAAU,2BACjB,yBACEA,UAAU,0BACVC,MAAO,CAAEC,aAAc,MAEvB,yBAAKF,UAAU,WACb,uCACA,2NAImB,IACjB,kBAACJ,EAAD,CAAYO,KAAK,+DAAjB,0BALF,SAcR,kBAAC,IAAD,QAGJ,kBAAC,IAAD,S,6FCzCeC,E,gLAqBnBC,OAAA,WAAU,IAAD,EACgCC,KAAKT,MAA1BU,GADX,EACCC,SADD,EACWD,QAAWV,E,oIADtB,0BAEP,OACE,yCAAOG,UAAU,8BAAiCH,GAChD,yBAAKG,UAAU,iBACZO,EAAOE,KAAI,SAAAC,GACV,OACE,yBACEC,IAAKD,EAAME,OAASF,EAAMG,MAAM,GAAGC,MACnCd,UAAU,YAETU,EAAME,OACL,wBAAIZ,UAAU,kBAAkBU,EAAME,OAExC,yBAAKZ,UAAU,gBACZU,EAAMG,MAAMJ,KAAI,gBAAGK,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,MAAd,OACf,kBAAC,IAAD,CACEL,IAAKI,EACLE,gBAAgB,YAChBF,GAAIA,EACJC,MAAOA,GAENF,c,GA3CcI,iBAAhBd,EAiBZe,aAAe,CACpBZ,OAAQ,I,sCCnBSa,E,gLAyBnBf,OAAA,WACE,OAAO,kBAAC,EAAYC,KAAKT,Q,GA1BkBqB,iBAA1BE,EAKZD,aAAe,CAIpBZ,OAAQ,CACN,CACEM,MAAO,CACL,CACEE,GAAI,4BACJD,MAAO,gBAET,CACEC,GAAI,uBACJD,MAAO","file":"component---src-pages-get-started-theming-js-3d1c5137a4edbe1a5f23.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport TopBar from '../../components/TopBar'\nimport GetStartedSidebar from '../../components/GetStartedSidebar'\nimport Layout from '../../components/Layout'\nimport PageFooter from '../../components/PageFooter'\n\nconst NativeLink = ({ ...props }) => {\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n}\n\nexport default () => {\n  return (\n    <Layout>\n      <Helmet>\n        <title>Theming Â· Evergreen</title>\n      </Helmet>\n      <div className=\"MainLayout\">\n        <TopBar />\n        <main className=\"MainLayout-main\">\n          <div className=\"MainLayout-content\">\n            <section className=\"MainLayout-contentRight\">\n              <div\n                className=\"Container-nextToSidebar\"\n                style={{ marginBottom: 160 }}\n              >\n                <div className=\"Content\">\n                  <h1>Theming</h1>\n                  <p>\n                    Evergreen v4 supports theming partially. It is still complex\n                    to theme Evergreen. We have done exploratory work to make\n                    theming more powerful and accessible. The progress is\n                    available in the{' '}\n                    <NativeLink href=\"https://github.com/segmentio/evergreen/tree/v4-create-theme\">\n                      v4-create-theme branch\n                    </NativeLink>\n                    .\n                  </p>\n                </div>\n              </div>\n            </section>\n          </div>\n          <GetStartedSidebar />\n        </main>\n      </div>\n      <PageFooter />\n    </Layout>\n  )\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nexport default class Sidebar extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n    groups: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        exact: PropTypes.bool,\n        links: PropTypes.arrayOf(\n          PropTypes.shape({\n            to: PropTypes.string,\n            label: PropTypes.string\n          })\n        )\n      })\n    )\n  }\n\n  static defaultProps = {\n    groups: []\n  }\n\n  render() {\n    const { children, groups, ...props } = this.props\n    return (\n      <aside className=\"MainLayout-sidebar Sidebar\" {...props}>\n        <div className=\"Sidebar-inner\">\n          {groups.map(group => {\n            return (\n              <div\n                key={group.title || group.links[0].label}\n                className=\"NavGroup\"\n              >\n                {group.title && (\n                  <h3 className=\"NavGroup-title\">{group.title}</h3>\n                )}\n                <nav className=\"NavGroup-nav\">\n                  {group.links.map(({ label, to, exact }) => (\n                    <Link\n                      key={to}\n                      activeClassName=\"is-active\"\n                      to={to}\n                      exact={exact}\n                    >\n                      {label}\n                    </Link>\n                  ))}\n                </nav>\n              </div>\n            )\n          })}\n        </div>\n      </aside>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport Sidebar from './Sidebar'\n\nexport default class GetStartedSidebar extends PureComponent {\n  static propTypes = {\n    ...Sidebar.propTypes\n  }\n\n  static defaultProps = {\n    /**\n     * Manually manage components for now\n     */\n    groups: [\n      {\n        links: [\n          {\n            to: '/get-started/introduction',\n            label: 'Introduction'\n          },\n          {\n            to: '/get-started/theming',\n            label: 'Theming'\n          }\n        ]\n      }\n    ]\n  }\n\n  render() {\n    return <Sidebar {...this.props} />\n  }\n}\n"],"sourceRoot":""}