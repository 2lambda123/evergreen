{"version":3,"sources":["webpack:///./src/components/Overview.js","webpack:///./src/pages/components/index.js","webpack:///./node_modules/fuzzaldrin-plus/lib/scorer.js","webpack:///./node_modules/fuzzaldrin-plus/lib/pathScorer.js","webpack:///./node_modules/fuzzaldrin-plus/lib/query.js","webpack:///./node_modules/fuzzaldrin-plus/lib/fuzzaldrin.js","webpack:///./node_modules/fuzzaldrin-plus/lib/filter.js","webpack:///./node_modules/fuzzaldrin-plus/lib/matcher.js"],"names":["Overview","state","searchQuery","search","trim","length","props","ia","JSON","parse","stringify","foundation","items","filter","item","name","tags","components","map","group","handleChange","e","setState","target","value","render","this","isComponentsShown","reduce","acc","className","SearchInput","autoFocus","height","width","marginTop","placeholder","onChange","title","description","OverviewItem","key","id","image","React","PureComponent","Layout","TopBar","tabIndex","IA","PageFooter","AcronymResult","computeScore","emptyAcronymResult","isAcronymFullWord","isMatch","isSeparator","isWordEnd","isWordStart","scoreAcronyms","scoreCharacter","scoreConsecutives","scoreExact","scoreExactMatch","scorePattern","scorePosition","scoreSize","exports","score","string","query","options","preparedQuery","string_lw","allowErrors","core_lw","core_up","toLowerCase","Math","ceil","subject","query_lw","query_up","i","j","m","n","qj_lw","qj_up","si","charCodeAt","subject_lw","acro","acro_score","align","csc_diag","csc_row","csc_score","csc_should_rebuild","miss_budget","miss_left","pos","record_miss","score_diag","score_row","score_up","si_lw","start","sz","count","indexOf","Array","charCodes","max","curr_s","prev_s","len","next_s","c","sc","abs","quality","sameCase","end","bonus","posBonus","startOfWord","k","mi","nj","pos2","fullWord","sepCount","sumPos","nbAcronymInQuery","call","countDir","_getExtensionScore","scorePath","_ref","fullPathScore","alpha","basePathScore","basePos","depth","extAdjust","fileLength","pathSeparator","useExtensionBonus","lastIndexOf","ext","slice","path","getExtension","str","substr","candidate","startPos","endPos","maxDepth","matched","coreChars","getCharCodes","opt_char_re","truncatedUpperCase","module","_arg","optCharRegEx","_ref1","core","replace","upper","_i","_len","toUpperCase","Query","defaultPathSeparator","_filter","matcher","parseOptions","pathScorer","preparedQueryCache","scorer","process","platform","candidates","usePathScoring","match","_results","push","apply","wrap","prepareQuery","pluckCandidates","sortCandidates","a","b","bKey","maxInners","maxResults","scoreProvider","scoredCandidates","spotLeft","sort","basenameMatch","computeMatch","mergeMatches","baseMatches","matches","matchIndex","matchPos","matchPositions","output","strPos","tagClass","tagClose","tagOpen","substring","ai","bj","out","offset","backtrack","move","trace","reverse"],"mappings":"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","file":"component---src-pages-components-index-js-9bf68a089bcd73e0e122.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { filter } from 'fuzzaldrin-plus'\nimport { SearchInput } from '../../../src'\nimport OverviewItem from './OverviewItem'\n\nexport default class Overview extends React.PureComponent {\n  static propTypes = {\n    /**\n     * Information Architecture.\n     */\n    ia: PropTypes.object\n  }\n\n  state = {\n    searchQuery: ''\n  }\n\n  search = () => {\n    const searchQuery = this.state.searchQuery.trim()\n    if (searchQuery.length < 2) return this.props.ia\n\n    const ia = JSON.parse(JSON.stringify(this.props.ia))\n\n    ia.foundation.items = ia.foundation.items.filter(item => {\n      return filter([item.name, ...(item.tags || [])], searchQuery).length > 0\n    })\n\n    ia.components.items = ia.components.items.map(group => {\n      return {\n        ...group,\n        items: group.items.filter(item => {\n          return (\n            filter([item.name, ...(item.tags || [])], searchQuery).length > 0\n          )\n        })\n      }\n    })\n\n    return ia\n  }\n\n  handleChange = e => {\n    this.setState({\n      searchQuery: e.target.value\n    })\n  }\n\n  render() {\n    const ia = this.search()\n\n    const isComponentsShown = ia.components.items.reduce((acc, group) => {\n      return group.items.length > 0 || acc\n    }, false)\n\n    return (\n      <section className=\"Overview Container\">\n        <SearchInput\n          autoFocus\n          height={40}\n          width=\"100%\"\n          marginTop={40}\n          placeholder=\"Search components and foundation...\"\n          value={this.state.searchQuery}\n          onChange={this.handleChange}\n        />\n        {ia.foundation.items.length > 0 && (\n          <div className=\"clearfix\">\n            <header>\n              <h2>{ia.foundation.title}</h2>\n              <p>{ia.foundation.description}</p>\n            </header>\n            <div className=\"Overview-groupItems\">\n              {ia.foundation.items.map(item => {\n                return (\n                  <OverviewItem key={item.name} id={item.id} image={item.image}>\n                    {item.name}\n                  </OverviewItem>\n                )\n              })}\n            </div>\n          </div>\n        )}\n        {isComponentsShown && (\n          <div className=\"clearfix\">\n            <header>\n              <h2>{ia.components.title}</h2>\n            </header>\n            <div>\n              {ia.components.items.map(group => {\n                if (group.items.length === 0) return null\n                return (\n                  <div key={group.title} className=\"Overview-group\">\n                    <h3 className=\"Overview-groupTitle\">{group.title}</h3>\n                    <div className=\"Overview-groupItems\">\n                      {group.items.map(item => {\n                        return (\n                          <OverviewItem\n                            key={item.name}\n                            id={item.id}\n                            image={item.image}\n                          >\n                            {item.name}\n                          </OverviewItem>\n                        )\n                      })}\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        )}\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport TopBar from '../../components/TopBar'\nimport IA from '../../IA'\nimport Overview from '../../components/Overview'\nimport Layout from '../../components/Layout'\nimport PageFooter from '../../components/PageFooter'\n\nexport default () => {\n  return (\n    <Layout>\n      <Helmet>\n        <title>Components · Evergreen</title>\n      </Helmet>\n      <div>\n        <TopBar />\n        <main tabIndex={-1}>\n          <Overview ia={IA} />\n        </main>\n      </div>\n      <PageFooter />\n    </Layout>\n  )\n}\n","require(\"core-js/modules/es6.array.index-of\");\n\n(function () {\n  var AcronymResult, computeScore, emptyAcronymResult, isAcronymFullWord, isMatch, isSeparator, isWordEnd, isWordStart, miss_coeff, pos_bonus, scoreAcronyms, scoreCharacter, scoreConsecutives, scoreExact, scoreExactMatch, scorePattern, scorePosition, scoreSize, tau_size, wm;\n  wm = 150;\n  pos_bonus = 20;\n  tau_size = 150;\n  miss_coeff = 0.75;\n\n  exports.score = function (string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    return Math.ceil(score);\n  };\n\n  exports.isMatch = isMatch = function isMatch(subject, query_lw, query_up) {\n    var i, j, m, n, qj_lw, qj_up, si;\n    m = subject.length;\n    n = query_lw.length;\n\n    if (!m || n > m) {\n      return false;\n    }\n\n    i = -1;\n    j = -1;\n\n    while (++j < n) {\n      qj_lw = query_lw.charCodeAt(j);\n      qj_up = query_up.charCodeAt(j);\n\n      while (++i < m) {\n        si = subject.charCodeAt(i);\n\n        if (si === qj_lw || si === qj_up) {\n          break;\n        }\n      }\n\n      if (i === m) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  exports.computeScore = computeScore = function computeScore(subject, subject_lw, preparedQuery) {\n    var acro, acro_score, align, csc_diag, csc_row, csc_score, csc_should_rebuild, i, j, m, miss_budget, miss_left, n, pos, query, query_lw, record_miss, score, score_diag, score_row, score_up, si_lw, start, sz;\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro = scoreAcronyms(subject, subject_lw, query, query_lw);\n    acro_score = acro.score;\n\n    if (acro.count === n) {\n      return scoreExact(n, m, acro_score, acro.pos);\n    }\n\n    pos = subject_lw.indexOf(query_lw);\n\n    if (pos > -1) {\n      return scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m);\n    }\n\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    sz = scoreSize(n, m);\n    miss_budget = Math.ceil(miss_coeff * n) + 5;\n    miss_left = miss_budget;\n    csc_should_rebuild = true;\n    j = -1;\n\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n\n    i = -1;\n\n    while (++i < m) {\n      si_lw = subject_lw[i];\n\n      if (!si_lw.charCodeAt(0) in preparedQuery.charCodes) {\n        if (csc_should_rebuild) {\n          j = -1;\n\n          while (++j < n) {\n            csc_row[j] = 0;\n          }\n\n          csc_should_rebuild = false;\n        }\n\n        continue;\n      }\n\n      score = 0;\n      score_diag = 0;\n      csc_diag = 0;\n      record_miss = true;\n      csc_should_rebuild = true;\n      j = -1;\n\n      while (++j < n) {\n        score_up = score_row[j];\n\n        if (score_up > score) {\n          score = score_up;\n        }\n\n        csc_score = 0;\n\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n\n          if (align > score) {\n            score = align;\n            miss_left = miss_budget;\n          } else {\n            if (record_miss && --miss_left <= 0) {\n              return Math.max(score, score_row[n - 1]) * sz;\n            }\n\n            record_miss = false;\n          }\n        }\n\n        score_diag = score_up;\n        csc_diag = csc_row[j];\n        csc_row[j] = csc_score;\n        score_row[j] = score;\n      }\n    }\n\n    score = score_row[n - 1];\n    return score * sz;\n  };\n\n  exports.isWordStart = isWordStart = function isWordStart(pos, subject, subject_lw) {\n    var curr_s, prev_s;\n\n    if (pos === 0) {\n      return true;\n    }\n\n    curr_s = subject[pos];\n    prev_s = subject[pos - 1];\n    return isSeparator(prev_s) || curr_s !== subject_lw[pos] && prev_s === subject_lw[pos - 1];\n  };\n\n  exports.isWordEnd = isWordEnd = function isWordEnd(pos, subject, subject_lw, len) {\n    var curr_s, next_s;\n\n    if (pos === len - 1) {\n      return true;\n    }\n\n    curr_s = subject[pos];\n    next_s = subject[pos + 1];\n    return isSeparator(next_s) || curr_s === subject_lw[pos] && next_s !== subject_lw[pos + 1];\n  };\n\n  isSeparator = function isSeparator(c) {\n    return c === ' ' || c === '.' || c === '-' || c === '_' || c === '/' || c === '\\\\';\n  };\n\n  scorePosition = function scorePosition(pos) {\n    var sc;\n\n    if (pos < pos_bonus) {\n      sc = pos_bonus - pos;\n      return 100 + sc * sc;\n    } else {\n      return Math.max(100 + pos_bonus - pos, 0);\n    }\n  };\n\n  exports.scoreSize = scoreSize = function scoreSize(n, m) {\n    return tau_size / (tau_size + Math.abs(m - n));\n  };\n\n  scoreExact = function scoreExact(n, m, quality, pos) {\n    return 2 * n * (wm * quality + scorePosition(pos)) * scoreSize(n, m);\n  };\n\n  exports.scorePattern = scorePattern = function scorePattern(count, len, sameCase, start, end) {\n    var bonus, sz;\n    sz = count;\n    bonus = 6;\n\n    if (sameCase === count) {\n      bonus += 2;\n    }\n\n    if (start) {\n      bonus += 3;\n    }\n\n    if (end) {\n      bonus += 1;\n    }\n\n    if (count === len) {\n      if (start) {\n        if (sameCase === len) {\n          sz += 2;\n        } else {\n          sz += 1;\n        }\n      }\n\n      if (end) {\n        bonus += 1;\n      }\n    }\n\n    return sameCase + sz * (sz + bonus);\n  };\n\n  exports.scoreCharacter = scoreCharacter = function scoreCharacter(i, j, start, acro_score, csc_score) {\n    var posBonus;\n    posBonus = scorePosition(i);\n\n    if (start) {\n      return posBonus + wm * ((acro_score > csc_score ? acro_score : csc_score) + 10);\n    }\n\n    return posBonus + wm * csc_score;\n  };\n\n  exports.scoreConsecutives = scoreConsecutives = function scoreConsecutives(subject, subject_lw, query, query_lw, i, j, startOfWord) {\n    var k, m, mi, n, nj, sameCase, sz;\n    m = subject.length;\n    n = query.length;\n    mi = m - i;\n    nj = n - j;\n    k = mi < nj ? mi : nj;\n    sameCase = 0;\n    sz = 0;\n\n    if (query[j] === subject[i]) {\n      sameCase++;\n    }\n\n    while (++sz < k && query_lw[++j] === subject_lw[++i]) {\n      if (query[j] === subject[i]) {\n        sameCase++;\n      }\n    }\n\n    if (sz < k) {\n      i--;\n    }\n\n    if (sz === 1) {\n      return 1 + 2 * sameCase;\n    }\n\n    return scorePattern(sz, n, sameCase, startOfWord, isWordEnd(i, subject, subject_lw, m));\n  };\n\n  exports.scoreExactMatch = scoreExactMatch = function scoreExactMatch(subject, subject_lw, query, query_lw, pos, n, m) {\n    var end, i, pos2, sameCase, start;\n    start = isWordStart(pos, subject, subject_lw);\n\n    if (!start) {\n      pos2 = subject_lw.indexOf(query_lw, pos + 1);\n\n      if (pos2 > -1) {\n        start = isWordStart(pos2, subject, subject_lw);\n\n        if (start) {\n          pos = pos2;\n        }\n      }\n    }\n\n    i = -1;\n    sameCase = 0;\n\n    while (++i < n) {\n      if (query[pos + i] === subject[i]) {\n        sameCase++;\n      }\n    }\n\n    end = isWordEnd(pos + n - 1, subject, subject_lw, m);\n    return scoreExact(n, m, scorePattern(n, n, sameCase, start, end), pos);\n  };\n\n  AcronymResult = function () {\n    function AcronymResult(score, pos, count) {\n      this.score = score;\n      this.pos = pos;\n      this.count = count;\n    }\n\n    return AcronymResult;\n  }();\n\n  emptyAcronymResult = new AcronymResult(0, 0.1, 0);\n\n  exports.scoreAcronyms = scoreAcronyms = function scoreAcronyms(subject, subject_lw, query, query_lw) {\n    var count, fullWord, i, j, m, n, qj_lw, sameCase, score, sepCount, sumPos;\n    m = subject.length;\n    n = query.length;\n\n    if (!(m > 1 && n > 1)) {\n      return emptyAcronymResult;\n    }\n\n    count = 0;\n    sepCount = 0;\n    sumPos = 0;\n    sameCase = 0;\n    i = -1;\n    j = -1;\n\n    while (++j < n) {\n      qj_lw = query_lw[j];\n\n      if (isSeparator(qj_lw)) {\n        i = subject_lw.indexOf(qj_lw, i + 1);\n\n        if (i > -1) {\n          sepCount++;\n          continue;\n        } else {\n          break;\n        }\n      }\n\n      while (++i < m) {\n        if (qj_lw === subject_lw[i] && isWordStart(i, subject, subject_lw)) {\n          if (query[j] === subject[i]) {\n            sameCase++;\n          }\n\n          sumPos += i;\n          count++;\n          break;\n        }\n      }\n\n      if (i === m) {\n        break;\n      }\n    }\n\n    if (count < 2) {\n      return emptyAcronymResult;\n    }\n\n    fullWord = count === n ? isAcronymFullWord(subject, subject_lw, query, count) : false;\n    score = scorePattern(count, n, sameCase, true, fullWord);\n    return new AcronymResult(score, sumPos / count, count + sepCount);\n  };\n\n  isAcronymFullWord = function isAcronymFullWord(subject, subject_lw, query, nbAcronymInQuery) {\n    var count, i, m, n;\n    m = subject.length;\n    n = query.length;\n    count = 0;\n\n    if (m > 12 * n) {\n      return false;\n    }\n\n    i = -1;\n\n    while (++i < m) {\n      if (isWordStart(i, subject, subject_lw) && ++count > nbAcronymInQuery) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}).call(this);","require(\"core-js/modules/es6.array.last-index-of\");\n\n(function () {\n  var computeScore, countDir, file_coeff, getExtension, _getExtensionScore, isMatch, scorePath, scoreSize, tau_depth, _ref;\n\n  _ref = require('./scorer'), isMatch = _ref.isMatch, computeScore = _ref.computeScore, scoreSize = _ref.scoreSize;\n  tau_depth = 20;\n  file_coeff = 2.5;\n\n  exports.score = function (string, query, options) {\n    var allowErrors, preparedQuery, score, string_lw;\n    preparedQuery = options.preparedQuery, allowErrors = options.allowErrors;\n\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return 0;\n    }\n\n    string_lw = string.toLowerCase();\n    score = computeScore(string, string_lw, preparedQuery);\n    score = scorePath(string, string_lw, score, options);\n    return Math.ceil(score);\n  };\n\n  scorePath = function scorePath(subject, subject_lw, fullPathScore, options) {\n    var alpha, basePathScore, basePos, depth, end, extAdjust, fileLength, pathSeparator, preparedQuery, useExtensionBonus;\n\n    if (fullPathScore === 0) {\n      return 0;\n    }\n\n    preparedQuery = options.preparedQuery, useExtensionBonus = options.useExtensionBonus, pathSeparator = options.pathSeparator;\n    end = subject.length - 1;\n\n    while (subject[end] === pathSeparator) {\n      end--;\n    }\n\n    basePos = subject.lastIndexOf(pathSeparator, end);\n    fileLength = end - basePos;\n    extAdjust = 1.0;\n\n    if (useExtensionBonus) {\n      extAdjust += _getExtensionScore(subject_lw, preparedQuery.ext, basePos, end, 2);\n      fullPathScore *= extAdjust;\n    }\n\n    if (basePos === -1) {\n      return fullPathScore;\n    }\n\n    depth = preparedQuery.depth;\n\n    while (basePos > -1 && depth-- > 0) {\n      basePos = subject.lastIndexOf(pathSeparator, basePos - 1);\n    }\n\n    basePathScore = basePos === -1 ? fullPathScore : extAdjust * computeScore(subject.slice(basePos + 1, end + 1), subject_lw.slice(basePos + 1, end + 1), preparedQuery);\n    alpha = 0.5 * tau_depth / (tau_depth + countDir(subject, end + 1, pathSeparator));\n    return alpha * basePathScore + (1 - alpha) * fullPathScore * scoreSize(0, file_coeff * fileLength);\n  };\n\n  exports.countDir = countDir = function countDir(path, end, pathSeparator) {\n    var count, i;\n\n    if (end < 1) {\n      return 0;\n    }\n\n    count = 0;\n    i = -1;\n\n    while (++i < end && path[i] === pathSeparator) {\n      continue;\n    }\n\n    while (++i < end) {\n      if (path[i] === pathSeparator) {\n        count++;\n\n        while (++i < end && path[i] === pathSeparator) {\n          continue;\n        }\n      }\n    }\n\n    return count;\n  };\n\n  exports.getExtension = getExtension = function getExtension(str) {\n    var pos;\n    pos = str.lastIndexOf(\".\");\n\n    if (pos < 0) {\n      return \"\";\n    } else {\n      return str.substr(pos + 1);\n    }\n  };\n\n  _getExtensionScore = function getExtensionScore(candidate, ext, startPos, endPos, maxDepth) {\n    var m, matched, n, pos;\n\n    if (!ext.length) {\n      return 0;\n    }\n\n    pos = candidate.lastIndexOf(\".\", endPos);\n\n    if (!(pos > startPos)) {\n      return 0;\n    }\n\n    n = ext.length;\n    m = endPos - pos;\n\n    if (m < n) {\n      n = m;\n      m = ext.length;\n    }\n\n    pos++;\n    matched = -1;\n\n    while (++matched < n) {\n      if (candidate[pos + matched] !== ext[matched]) {\n        break;\n      }\n    }\n\n    if (matched === 0 && maxDepth > 0) {\n      return 0.9 * _getExtensionScore(candidate, ext, startPos, pos - 2, maxDepth - 1);\n    }\n\n    return matched / m;\n  };\n}).call(this);","require(\"core-js/modules/es6.regexp.replace\");\n\n(function () {\n  var Query, coreChars, countDir, getCharCodes, getExtension, opt_char_re, truncatedUpperCase, _ref;\n\n  _ref = require(\"./pathScorer\"), countDir = _ref.countDir, getExtension = _ref.getExtension;\n\n  module.exports = Query = function () {\n    function Query(query, _arg) {\n      var optCharRegEx, pathSeparator, _ref1;\n\n      _ref1 = _arg != null ? _arg : {}, optCharRegEx = _ref1.optCharRegEx, pathSeparator = _ref1.pathSeparator;\n\n      if (!(query && query.length)) {\n        return null;\n      }\n\n      this.query = query;\n      this.query_lw = query.toLowerCase();\n      this.core = coreChars(query, optCharRegEx);\n      this.core_lw = this.core.toLowerCase();\n      this.core_up = truncatedUpperCase(this.core);\n      this.depth = countDir(query, query.length, pathSeparator);\n      this.ext = getExtension(this.query_lw);\n      this.charCodes = getCharCodes(this.query_lw);\n    }\n\n    return Query;\n  }();\n\n  opt_char_re = /[ _\\-:\\/\\\\]/g;\n\n  coreChars = function coreChars(query, optCharRegEx) {\n    if (optCharRegEx == null) {\n      optCharRegEx = opt_char_re;\n    }\n\n    return query.replace(optCharRegEx, '');\n  };\n\n  truncatedUpperCase = function truncatedUpperCase(str) {\n    var _char, upper, _i, _len;\n\n    upper = \"\";\n\n    for (_i = 0, _len = str.length; _i < _len; _i++) {\n      _char = str[_i];\n      upper += _char.toUpperCase()[0];\n    }\n\n    return upper;\n  };\n\n  getCharCodes = function getCharCodes(str) {\n    var charCodes, i, len;\n    len = str.length;\n    i = -1;\n    charCodes = [];\n\n    while (++i < len) {\n      charCodes[str.charCodeAt(i)] = true;\n    }\n\n    return charCodes;\n  };\n}).call(this);","require(\"core-js/modules/es6.regexp.match\");\n\n(function () {\n  var Query, defaultPathSeparator, _filter, matcher, parseOptions, pathScorer, preparedQueryCache, scorer;\n\n  _filter = require('./filter');\n  matcher = require('./matcher');\n  scorer = require('./scorer');\n  pathScorer = require('./pathScorer');\n  Query = require('./query');\n  preparedQueryCache = null;\n  defaultPathSeparator = (typeof process !== \"undefined\" && process !== null ? process.platform : void 0) === \"win32\" ? '\\\\' : '/';\n  module.exports = {\n    filter: function filter(candidates, query, options) {\n      if (options == null) {\n        options = {};\n      }\n\n      if (!((query != null ? query.length : void 0) && (candidates != null ? candidates.length : void 0))) {\n        return [];\n      }\n\n      options = parseOptions(options, query);\n      return _filter(candidates, query, options);\n    },\n    score: function score(string, query, options) {\n      if (options == null) {\n        options = {};\n      }\n\n      if (!((string != null ? string.length : void 0) && (query != null ? query.length : void 0))) {\n        return 0;\n      }\n\n      options = parseOptions(options, query);\n\n      if (options.usePathScoring) {\n        return pathScorer.score(string, query, options);\n      } else {\n        return scorer.score(string, query, options);\n      }\n    },\n    match: function match(string, query, options) {\n      var _i, _ref, _results;\n\n      if (options == null) {\n        options = {};\n      }\n\n      if (!string) {\n        return [];\n      }\n\n      if (!query) {\n        return [];\n      }\n\n      if (string === query) {\n        return function () {\n          _results = [];\n\n          for (var _i = 0, _ref = string.length; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--) {\n            _results.push(_i);\n          }\n\n          return _results;\n        }.apply(this);\n      }\n\n      options = parseOptions(options, query);\n      return matcher.match(string, query, options);\n    },\n    wrap: function wrap(string, query, options) {\n      if (options == null) {\n        options = {};\n      }\n\n      if (!string) {\n        return [];\n      }\n\n      if (!query) {\n        return [];\n      }\n\n      options = parseOptions(options, query);\n      return matcher.wrap(string, query, options);\n    },\n    prepareQuery: function prepareQuery(query, options) {\n      if (options == null) {\n        options = {};\n      }\n\n      options = parseOptions(options, query);\n      return options.preparedQuery;\n    }\n  };\n\n  parseOptions = function parseOptions(options, query) {\n    if (options.allowErrors == null) {\n      options.allowErrors = false;\n    }\n\n    if (options.usePathScoring == null) {\n      options.usePathScoring = true;\n    }\n\n    if (options.useExtensionBonus == null) {\n      options.useExtensionBonus = false;\n    }\n\n    if (options.pathSeparator == null) {\n      options.pathSeparator = defaultPathSeparator;\n    }\n\n    if (options.optCharRegEx == null) {\n      options.optCharRegEx = null;\n    }\n\n    if (options.wrap == null) {\n      options.wrap = null;\n    }\n\n    if (options.preparedQuery == null) {\n      options.preparedQuery = preparedQueryCache && preparedQueryCache.query === query ? preparedQueryCache : preparedQueryCache = new Query(query, options);\n    }\n\n    return options;\n  };\n}).call(this);","require(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\n(function () {\n  var Query, pathScorer, pluckCandidates, scorer, sortCandidates;\n  scorer = require('./scorer');\n  pathScorer = require('./pathScorer');\n  Query = require('./query');\n\n  pluckCandidates = function pluckCandidates(a) {\n    return a.candidate;\n  };\n\n  sortCandidates = function sortCandidates(a, b) {\n    return b.score - a.score;\n  };\n\n  module.exports = function (candidates, query, options) {\n    var bKey, candidate, key, maxInners, maxResults, score, scoreProvider, scoredCandidates, spotLeft, string, usePathScoring, _i, _len;\n\n    scoredCandidates = [];\n    key = options.key, maxResults = options.maxResults, maxInners = options.maxInners, usePathScoring = options.usePathScoring;\n    spotLeft = maxInners != null && maxInners > 0 ? maxInners : candidates.length + 1;\n    bKey = key != null;\n    scoreProvider = usePathScoring ? pathScorer : scorer;\n\n    for (_i = 0, _len = candidates.length; _i < _len; _i++) {\n      candidate = candidates[_i];\n      string = bKey ? candidate[key] : candidate;\n\n      if (!string) {\n        continue;\n      }\n\n      score = scoreProvider.score(string, query, options);\n\n      if (score > 0) {\n        scoredCandidates.push({\n          candidate: candidate,\n          score: score\n        });\n\n        if (! --spotLeft) {\n          break;\n        }\n      }\n    }\n\n    scoredCandidates.sort(sortCandidates);\n    candidates = scoredCandidates.map(pluckCandidates);\n\n    if (maxResults != null) {\n      candidates = candidates.slice(0, maxResults);\n    }\n\n    return candidates;\n  };\n}).call(this);","require(\"core-js/modules/es6.array.last-index-of\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\n(function () {\n  var basenameMatch, computeMatch, isMatch, isWordStart, match, mergeMatches, scoreAcronyms, scoreCharacter, scoreConsecutives, _ref;\n\n  _ref = require('./scorer'), isMatch = _ref.isMatch, isWordStart = _ref.isWordStart, scoreConsecutives = _ref.scoreConsecutives, scoreCharacter = _ref.scoreCharacter, scoreAcronyms = _ref.scoreAcronyms;\n\n  exports.match = match = function match(string, query, options) {\n    var allowErrors, baseMatches, matches, pathSeparator, preparedQuery, string_lw;\n    allowErrors = options.allowErrors, preparedQuery = options.preparedQuery, pathSeparator = options.pathSeparator;\n\n    if (!(allowErrors || isMatch(string, preparedQuery.core_lw, preparedQuery.core_up))) {\n      return [];\n    }\n\n    string_lw = string.toLowerCase();\n    matches = computeMatch(string, string_lw, preparedQuery);\n\n    if (matches.length === 0) {\n      return matches;\n    }\n\n    if (string.indexOf(pathSeparator) > -1) {\n      baseMatches = basenameMatch(string, string_lw, preparedQuery, pathSeparator);\n      matches = mergeMatches(matches, baseMatches);\n    }\n\n    return matches;\n  };\n\n  exports.wrap = function (string, query, options) {\n    var matchIndex, matchPos, matchPositions, output, strPos, tagClass, tagClose, tagOpen, _ref1;\n\n    if (options.wrap != null) {\n      _ref1 = options.wrap, tagClass = _ref1.tagClass, tagOpen = _ref1.tagOpen, tagClose = _ref1.tagClose;\n    }\n\n    if (tagClass == null) {\n      tagClass = 'highlight';\n    }\n\n    if (tagOpen == null) {\n      tagOpen = '<strong class=\"' + tagClass + '\">';\n    }\n\n    if (tagClose == null) {\n      tagClose = '</strong>';\n    }\n\n    if (string === query) {\n      return tagOpen + string + tagClose;\n    }\n\n    matchPositions = match(string, query, options);\n\n    if (matchPositions.length === 0) {\n      return string;\n    }\n\n    output = '';\n    matchIndex = -1;\n    strPos = 0;\n\n    while (++matchIndex < matchPositions.length) {\n      matchPos = matchPositions[matchIndex];\n\n      if (matchPos > strPos) {\n        output += string.substring(strPos, matchPos);\n        strPos = matchPos;\n      }\n\n      while (++matchIndex < matchPositions.length) {\n        if (matchPositions[matchIndex] === matchPos + 1) {\n          matchPos++;\n        } else {\n          matchIndex--;\n          break;\n        }\n      }\n\n      matchPos++;\n\n      if (matchPos > strPos) {\n        output += tagOpen;\n        output += string.substring(strPos, matchPos);\n        output += tagClose;\n        strPos = matchPos;\n      }\n    }\n\n    if (strPos <= string.length - 1) {\n      output += string.substring(strPos);\n    }\n\n    return output;\n  };\n\n  basenameMatch = function basenameMatch(subject, subject_lw, preparedQuery, pathSeparator) {\n    var basePos, depth, end;\n    end = subject.length - 1;\n\n    while (subject[end] === pathSeparator) {\n      end--;\n    }\n\n    basePos = subject.lastIndexOf(pathSeparator, end);\n\n    if (basePos === -1) {\n      return [];\n    }\n\n    depth = preparedQuery.depth;\n\n    while (depth-- > 0) {\n      basePos = subject.lastIndexOf(pathSeparator, basePos - 1);\n\n      if (basePos === -1) {\n        return [];\n      }\n    }\n\n    basePos++;\n    end++;\n    return computeMatch(subject.slice(basePos, end), subject_lw.slice(basePos, end), preparedQuery, basePos);\n  };\n\n  mergeMatches = function mergeMatches(a, b) {\n    var ai, bj, i, j, m, n, out;\n    m = a.length;\n    n = b.length;\n\n    if (n === 0) {\n      return a.slice();\n    }\n\n    if (m === 0) {\n      return b.slice();\n    }\n\n    i = -1;\n    j = 0;\n    bj = b[j];\n    out = [];\n\n    while (++i < m) {\n      ai = a[i];\n\n      while (bj <= ai && ++j < n) {\n        if (bj < ai) {\n          out.push(bj);\n        }\n\n        bj = b[j];\n      }\n\n      out.push(ai);\n    }\n\n    while (j < n) {\n      out.push(b[j++]);\n    }\n\n    return out;\n  };\n\n  computeMatch = function computeMatch(subject, subject_lw, preparedQuery, offset) {\n    var DIAGONAL, LEFT, STOP, UP, acro_score, align, backtrack, csc_diag, csc_row, csc_score, i, j, m, matches, move, n, pos, query, query_lw, score, score_diag, score_row, score_up, si_lw, start, trace;\n\n    if (offset == null) {\n      offset = 0;\n    }\n\n    query = preparedQuery.query;\n    query_lw = preparedQuery.query_lw;\n    m = subject.length;\n    n = query.length;\n    acro_score = scoreAcronyms(subject, subject_lw, query, query_lw).score;\n    score_row = new Array(n);\n    csc_row = new Array(n);\n    STOP = 0;\n    UP = 1;\n    LEFT = 2;\n    DIAGONAL = 3;\n    trace = new Array(m * n);\n    pos = -1;\n    j = -1;\n\n    while (++j < n) {\n      score_row[j] = 0;\n      csc_row[j] = 0;\n    }\n\n    i = -1;\n\n    while (++i < m) {\n      score = 0;\n      score_up = 0;\n      csc_diag = 0;\n      si_lw = subject_lw[i];\n      j = -1;\n\n      while (++j < n) {\n        csc_score = 0;\n        align = 0;\n        score_diag = score_up;\n\n        if (query_lw[j] === si_lw) {\n          start = isWordStart(i, subject, subject_lw);\n          csc_score = csc_diag > 0 ? csc_diag : scoreConsecutives(subject, subject_lw, query, query_lw, i, j, start);\n          align = score_diag + scoreCharacter(i, j, start, acro_score, csc_score);\n        }\n\n        score_up = score_row[j];\n        csc_diag = csc_row[j];\n\n        if (score > score_up) {\n          move = LEFT;\n        } else {\n          score = score_up;\n          move = UP;\n        }\n\n        if (align > score) {\n          score = align;\n          move = DIAGONAL;\n        } else {\n          csc_score = 0;\n        }\n\n        score_row[j] = score;\n        csc_row[j] = csc_score;\n        trace[++pos] = score > 0 ? move : STOP;\n      }\n    }\n\n    i = m - 1;\n    j = n - 1;\n    pos = i * n + j;\n    backtrack = true;\n    matches = [];\n\n    while (backtrack && i >= 0 && j >= 0) {\n      switch (trace[pos]) {\n        case UP:\n          i--;\n          pos -= n;\n          break;\n\n        case LEFT:\n          j--;\n          pos--;\n          break;\n\n        case DIAGONAL:\n          matches.push(i + offset);\n          j--;\n          i--;\n          pos -= n + 1;\n          break;\n\n        default:\n          backtrack = false;\n      }\n    }\n\n    matches.reverse();\n    return matches;\n  };\n}).call(this);"],"sourceRoot":""}