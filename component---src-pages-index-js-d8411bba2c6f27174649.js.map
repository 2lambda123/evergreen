{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///../src/spinner/src/Spinner.js","webpack:///../src/buttons/src/Button.js"],"names":["NativeLink","_ref","props","Object","assign","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","target","rel","Root","componentDidCatch","error","errorInfo","console","render","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","className","_components_TopBar__WEBPACK_IMPORTED_MODULE_5__","href","_src__WEBPACK_IMPORTED_MODULE_4__","is","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","appearance","height","marginRight","style","width","t","Component","loadingKeyframes","ui_box__WEBPACK_IMPORTED_MODULE_5__","css","keyframes","0%","transform","100%","loadingCircleKeyframes","strokeDashoffset","outer","animation","Spinner","color","_this$props","this","theme","size","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","ui_box__WEBPACK_IMPORTED_MODULE_5___default","lineHeight","x","y","viewBox","spinnerColor","strokeDasharray","strokeWidth","strokeMiterlimit","strokeLinecap","stroke","fill","cx","cy","r","react__WEBPACK_IMPORTED_MODULE_3__","PureComponent","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_4___default","number","isRequired","object","defaultProps","__webpack_exports__","_theme__WEBPACK_IMPORTED_MODULE_6__","Button","iconBefore","iconAfter","intent","isActive","children","disabled","isLoading","paddingRight","paddingLeft","paddingTop","paddingBottom","iconBeforeKey","iconAfterKey","themedClassName","getButtonClassName","textSize","getTextSizeForControlHeight","borderRadius","getBorderRadiusForControlHeight","iconSize","getIconSizeForButton","pr","Math","round","pl","_icon__WEBPACK_IMPORTED_MODULE_8__","icon","marginLeft","_typography__WEBPACK_IMPORTED_MODULE_7__","classnames__WEBPACK_IMPORTED_MODULE_5___default","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","marginTop","marginBottom","data-active","styles","_spinner__WEBPACK_IMPORTED_MODULE_9__","ui_box__WEBPACK_IMPORTED_MODULE_6__","dimensions","spacing","position","layout","oneOf","bool","string","fontFamily","fontWeight","display","alignItems","flexWrap","_theme__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"component---src-pages-index-js-d8411bba2c6f27174649.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Button } from '../../../src'\nimport TopBar from '../components/TopBar'\nimport Layout from '../components/Layout'\n\nconst NativeLink = ({ ...props }) => {\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n}\n\nexport default class Root extends React.Component {\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo)\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div className=\"MainLayout\">\n          <TopBar />\n          <main className=\"MainLayout-main\">\n            <div className=\"MainLayout-content\">\n              <section className=\"Home\">\n                <div className=\"Home-inner\">\n                  <h1>React Based UI Framework</h1>\n                  <p>\n                    It is build and maintained open&#8209;source&nbsp;by&nbsp;\n                    <NativeLink className=\"Link\" href=\"https://segment.com/\">\n                      Segment\n                    </NativeLink>.\n                  </p>\n                  <div>\n                    <Button\n                      is={Link}\n                      to=\"/components/\"\n                      appearance=\"primary\"\n                      height={40}\n                      marginRight={12}\n                    >\n                      Components\n                    </Button>\n                    <NativeLink\n                      href=\"https://github.com/segmentio/evergreen\"\n                      style={{\n                        width: 136\n                      }}\n                    >\n                      GitHub\n                    </NativeLink>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </main>\n        </div>\n      </Layout>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { css } from 'ui-box'\nimport { withTheme } from '../../theme'\n\nconst loadingKeyframes = css.keyframes('loading', {\n  '0%': {\n    transform: 'rotate(0)'\n  },\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n})\n\nconst loadingCircleKeyframes = css.keyframes('loading-circle', {\n  '0%': {\n    strokeDashoffset: 600\n  },\n  '100%': {\n    strokeDashoffset: 0\n  }\n})\n\nconst outer = {\n  animation: `${loadingKeyframes} 2s linear infinite`\n}\n\nconst inner = color => ({\n  strokeDashoffset: 600,\n  strokeDasharray: 300,\n  strokeWidth: 12,\n  strokeMiterlimit: 10,\n  strokeLinecap: 'round',\n  animation: `${loadingCircleKeyframes} 1.6s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite`,\n  stroke: color,\n  fill: 'transparent'\n})\n\nclass Spinner extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the Box component as the base.\n     */\n    ...Box.propTypes,\n\n    /**\n     * The size of the spinner.\n     */\n    size: PropTypes.number.isRequired,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    size: 40\n  }\n\n  render() {\n    const { theme, size, ...props } = this.props\n    return (\n      <Box width={size} height={size} lineHeight={0} {...props}>\n        <Box is=\"svg\" css={outer} x=\"0px\" y=\"0px\" viewBox=\"0 0 150 150\">\n          <Box\n            is=\"circle\"\n            css={inner(theme.spinnerColor)}\n            cx=\"75\"\n            cy=\"75\"\n            r=\"60\"\n          />\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default withTheme(Spinner)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport cx from 'classnames'\nimport { dimensions, spacing, position, layout } from 'ui-box'\nimport { Text } from '../../typography'\nimport { Icon } from '../../icon'\nimport { Spinner } from '../../spinner'\nimport { withTheme } from '../../theme'\n\nclass Button extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the dimensions spec from the Box primitivie.\n     */\n    ...dimensions.propTypes,\n\n    /**\n     * Composes the spacing spec from the Box primitivie.\n     */\n    ...spacing.propTypes,\n\n    /**\n     * Composes the position spec from the Box primitivie.\n     */\n    ...position.propTypes,\n\n    /**\n     * Composes the layout spec from the Box primitivie.\n     */\n    ...layout.propTypes,\n\n    /**\n     * The intent of the button.\n     */\n    intent: PropTypes.oneOf(['none', 'success', 'warning', 'danger']),\n\n    /**\n     * The appearance of the button.\n     */\n    appearance: PropTypes.oneOf(['default', 'minimal', 'primary']).isRequired,\n\n    /**\n     * When true, show a loading spinner before the children.\n     * This also disables the button.\n     */\n    isLoading: PropTypes.bool,\n\n    /**\n     * Forcefully set the active state of a button.\n     * Useful in conjuction with a Popover.\n     */\n    isActive: PropTypes.bool,\n\n    /**\n     * Sets an icon before the text. Can be any icon from Evergreen.\n     */\n    iconBefore: PropTypes.string,\n\n    /**\n     * Sets an icon after the text. Can be any icon from Evergreen.\n     */\n    iconAfter: PropTypes.string,\n\n    /**\n     * When true, the button is disabled.\n     * isLoading also sets the button to disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Theme provided by ThemeProvider.\n     */\n    theme: PropTypes.object.isRequired,\n\n    /**\n     * Class name passed to the button.\n     * Only use if you know what you are doing.\n     */\n    className: PropTypes.string\n  }\n\n  static defaultProps = {\n    appearance: 'default',\n    height: 32,\n    intent: 'none',\n    isActive: false,\n    paddingBottom: 0,\n    paddingTop: 0\n  }\n\n  static styles = {\n    position: 'relative',\n    fontFamily: 'ui',\n    fontWeight: 500,\n    display: 'inline-flex',\n    alignItems: 'center',\n    flexWrap: 'nowrap'\n  }\n\n  render() {\n    const {\n      theme,\n      className,\n\n      intent,\n      height,\n      isActive,\n      children,\n      disabled,\n      appearance,\n      isLoading,\n\n      // Paddings\n      paddingRight,\n      paddingLeft,\n      paddingTop,\n      paddingBottom,\n\n      // Icons\n      iconBefore: iconBeforeKey,\n      iconAfter: iconAfterKey,\n\n      ...props\n    } = this.props\n\n    const themedClassName = theme.getButtonClassName(appearance, intent)\n    const textSize = theme.getTextSizeForControlHeight(height)\n\n    const borderRadius = theme.getBorderRadiusForControlHeight(height)\n    const iconSize = theme.getIconSizeForButton(height)\n\n    const pr =\n      paddingRight !== undefined ? paddingRight : Math.round(height / 2) // eslint-disable-line no-negated-condition\n    const pl = paddingLeft !== undefined ? paddingLeft : Math.round(height / 2) // eslint-disable-line no-negated-condition\n\n    let iconBefore\n    if (iconBeforeKey) {\n      iconBefore = (\n        <Icon\n          icon={iconBeforeKey}\n          size={iconSize}\n          marginLeft={-Math.round(pl * 0.2)}\n          marginRight={Math.round(iconSize * 0.7)}\n        />\n      )\n    }\n\n    let iconAfter\n    if (iconAfterKey) {\n      iconAfter = (\n        <Icon\n          icon={iconAfterKey}\n          size={iconSize}\n          marginRight={-Math.round(pl * 0.2)}\n          marginLeft={Math.round(iconSize * 0.7)}\n        />\n      )\n    }\n\n    return (\n      <Text\n        is=\"button\"\n        className={cx(themedClassName, className)}\n        borderTopRightRadius={borderRadius}\n        borderBottomRightRadius={borderRadius}\n        borderTopLeftRadius={borderRadius}\n        borderBottomLeftRadius={borderRadius}\n        paddingTop={paddingTop}\n        paddingBottom={paddingBottom}\n        paddingRight={pr}\n        paddingLeft={pl}\n        marginLeft={0} // Removes weird margins in Safari\n        marginRight={0} // Removes weird margins in Safari\n        marginTop={0} // Removes weird margins in Safari\n        marginBottom={0} // Removes weird margins in Safari\n        size={textSize}\n        color={null} // Prevent the Text color overriding the glamor appearanceStyle color\n        height={height}\n        lineHeight={`${height}px`}\n        {...(isActive ? { 'data-active': true } : {})}\n        {...Button.styles}\n        {...props}\n        disabled={disabled || isLoading}\n      >\n        {isLoading && (\n          <Spinner\n            marginLeft={-Math.round(height / 8)}\n            marginRight={Math.round(height / 4)}\n            size={Math.round(height / 2)}\n          />\n        )}\n        {iconBefore || null}\n        {children}\n        {iconAfter || null}\n      </Text>\n    )\n  }\n}\n\nexport default withTheme(Button)\n"],"sourceRoot":""}