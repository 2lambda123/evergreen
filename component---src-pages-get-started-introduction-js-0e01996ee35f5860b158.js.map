{"version":3,"sources":["webpack:///./src/pages/get-started/introduction.js","webpack:///./src/components/Sidebar.js","webpack:///./src/components/GetStartedSidebar.js"],"names":["NativeLink","props","target","rel","className","style","marginBottom","href","trim","Sidebar","render","this","groups","children","map","group","key","title","links","label","to","exact","activeClassName","PureComponent","defaultProps","GetStartedSidebar"],"mappings":"4LAQMA,EAAa,SAAC,GAAkB,IAAbC,EAAY,oBACnC,OAAO,qCAAGC,OAAO,SAASC,IAAI,uBAA0BF,KAG3C,qBACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4DAEF,yBAAKG,UAAU,cACb,kBAAC,IAAD,MACA,0BAAMA,UAAU,mBACd,yBAAKA,UAAU,sBACb,6BAASA,UAAU,2BACjB,yBACEA,UAAU,0BACVC,MAAO,CAAEC,aAAc,MAEvB,yBAAKF,UAAU,WACb,4CACA,uBAAGA,UAAU,KAAb,6EAGE,6BAHF,6CAGmD,IACjD,kBAACJ,EAAD,CAAYO,KAAK,wBAAjB,WAJF,KAOA,yDACA,2BACE,6IADF,2JAUA,2BACE,mKADF,oEAQI,IACF,kBAACP,EAAD,CAAYO,KAAK,uCAAjB,iBAEc,IAXhB,4CAcA,2BACE,wJAGU,IAJZ,yJASA,0DACA,sJAE+D,IAC7D,8CAHF,cAMF,kBAAC,IAAD,KACG,uFAIDC,QAEF,yBAAKJ,UAAU,WACb,sFAC2D,IACzD,kBAACJ,EAAD,CAAYO,KAAK,yDAAjB,oBAFF,4BASF,kBAAC,IAAD,wNAcN,kBAAC,IAAD,QAGJ,kBAAC,IAAD,S,6FC3GeE,E,gLAqBnBC,OAAA,WAAU,IAAD,EACgCC,KAAKV,MAA1BW,GADX,EACCC,SADD,EACWD,QAAWX,E,oIADtB,0BAEP,OACE,yCAAOG,UAAU,8BAAiCH,GAChD,yBAAKG,UAAU,iBACZQ,EAAOE,KAAI,SAAAC,GACV,OACE,yBACEC,IAAKD,EAAME,OAASF,EAAMG,MAAM,GAAGC,MACnCf,UAAU,YAETW,EAAME,OACL,wBAAIb,UAAU,kBAAkBW,EAAME,OAExC,yBAAKb,UAAU,gBACZW,EAAMG,MAAMJ,KAAI,gBAAGK,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,MAAd,OACf,kBAAC,IAAD,CACEL,IAAKI,EACLE,gBAAgB,YAChBF,GAAIA,EACJC,MAAOA,GAENF,c,GA3CcI,iBAAhBd,EAiBZe,aAAe,CACpBZ,OAAQ,I,sCCnBSa,E,gLAyBnBf,OAAA,WACE,OAAO,kBAAC,EAAYC,KAAKV,Q,GA1BkBsB,iBAA1BE,EAKZD,aAAe,CAIpBZ,OAAQ,CACN,CACEM,MAAO,CACL,CACEE,GAAI,4BACJD,MAAO,gBAET,CACEC,GAAI,uBACJD,MAAO","file":"component---src-pages-get-started-introduction-js-0e01996ee35f5860b158.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport TopBar from '../../components/TopBar'\nimport GetStartedSidebar from '../../components/GetStartedSidebar'\nimport SyntaxHighlighter from '../../components/SyntaxHighlighter'\nimport Layout from '../../components/Layout'\nimport PageFooter from '../../components/PageFooter'\n\nconst NativeLink = ({ ...props }) => {\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n}\n\nexport default () => {\n  return (\n    <Layout>\n      <Helmet>\n        <title>Introduction Â· Evergreen</title>\n      </Helmet>\n      <div className=\"MainLayout\">\n        <TopBar />\n        <main className=\"MainLayout-main\">\n          <div className=\"MainLayout-content\">\n            <section className=\"MainLayout-contentRight\">\n              <div\n                className=\"Container-nextToSidebar\"\n                style={{ marginBottom: 160 }}\n              >\n                <div className=\"Content\">\n                  <h1>Introduction</h1>\n                  <p className=\"p\">\n                    Evergreen is a pragmatic UI kit for building evolving\n                    products on the web.\n                    <br /> It is built and maintained open-source by{' '}\n                    <NativeLink href=\"https://segment.com/\">Segment</NativeLink>\n                    .\n                  </p>\n                  <h2>Core beliefs of Evergreen</h2>\n                  <p>\n                    <strong>\n                      Evergreen is built on the belief that you can never\n                      predict all future requirements, only prepare for it.\n                    </strong>\n                    {` `}\n                    Instead of creating fixed configurations that work today,\n                    Evergreen promotes building systems that anticipate new and\n                    changing design requirements.\n                  </p>\n                  <p>\n                    <strong>\n                      Evergreen is built on the belief that things should work\n                      out of the box with smart defaults and offer full control\n                      when needed.\n                    </strong>\n                    {` `}\n                    For example, Evergreen implements most components on top of\n                    a{' '}\n                    <NativeLink href=\"https://github.com/segmentio/ui-box\">\n                      Box primitive\n                    </NativeLink>{' '}\n                    which allows for a lot of customization.\n                  </p>\n                  <p>\n                    <strong>\n                      Evergreen is built on the belief that using Evergreen and\n                      contributing to Evergreen should be a pleasant experience.\n                    </strong>{' '}\n                    We prioritize documentation and all the tools for a solid\n                    developer experience. We advocate respect and inclusivity in\n                    our writings and interactions.\n                  </p>\n                  <h2>Install and use components</h2>\n                  <p>\n                    Evergreen is made up of multiple components and tools which\n                    you can import one by one. All you need to do is install the{' '}\n                    <code>evergreen-ui</code> package:\n                  </p>\n                </div>\n                <SyntaxHighlighter>\n                  {`\n$ yarn add evergreen-ui\n# or\n$ npm install --save evergreen-ui\n                `.trim()}\n                </SyntaxHighlighter>\n                <div className=\"Content\">\n                  <p>\n                    A working version, assuming you are using something like{' '}\n                    <NativeLink href=\"https://github.com/facebookincubator/create-react-app\">\n                      Create React App\n                    </NativeLink>\n                    , might look like this:\n                  </p>\n                </div>\n\n                <SyntaxHighlighter>\n                  {`\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Button } from 'evergreen-ui'\n\nReactDOM.render(\n  <Button>I am using ðŸŒ² Evergreen!</Button>,\n  document.getElementById('root')\n)`}\n                </SyntaxHighlighter>\n              </div>\n            </section>\n          </div>\n          <GetStartedSidebar />\n        </main>\n      </div>\n      <PageFooter />\n    </Layout>\n  )\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nexport default class Sidebar extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n    groups: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        exact: PropTypes.bool,\n        links: PropTypes.arrayOf(\n          PropTypes.shape({\n            to: PropTypes.string,\n            label: PropTypes.string\n          })\n        )\n      })\n    )\n  }\n\n  static defaultProps = {\n    groups: []\n  }\n\n  render() {\n    const { children, groups, ...props } = this.props\n    return (\n      <aside className=\"MainLayout-sidebar Sidebar\" {...props}>\n        <div className=\"Sidebar-inner\">\n          {groups.map(group => {\n            return (\n              <div\n                key={group.title || group.links[0].label}\n                className=\"NavGroup\"\n              >\n                {group.title && (\n                  <h3 className=\"NavGroup-title\">{group.title}</h3>\n                )}\n                <nav className=\"NavGroup-nav\">\n                  {group.links.map(({ label, to, exact }) => (\n                    <Link\n                      key={to}\n                      activeClassName=\"is-active\"\n                      to={to}\n                      exact={exact}\n                    >\n                      {label}\n                    </Link>\n                  ))}\n                </nav>\n              </div>\n            )\n          })}\n        </div>\n      </aside>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport Sidebar from './Sidebar'\n\nexport default class GetStartedSidebar extends PureComponent {\n  static propTypes = {\n    ...Sidebar.propTypes\n  }\n\n  static defaultProps = {\n    /**\n     * Manually manage components for now\n     */\n    groups: [\n      {\n        links: [\n          {\n            to: '/get-started/introduction',\n            label: 'Introduction'\n          },\n          {\n            to: '/get-started/theming',\n            label: 'Theming'\n          }\n        ]\n      }\n    ]\n  }\n\n  render() {\n    return <Sidebar {...this.props} />\n  }\n}\n"],"sourceRoot":""}