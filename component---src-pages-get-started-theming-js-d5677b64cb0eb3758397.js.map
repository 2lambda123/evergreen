{"version":3,"sources":["webpack:///./src/pages/get-started/theming.js","webpack:///./src/components/SyntaxHighlighter.js","webpack:///./src/components/Sidebar.js","webpack:///./src/components/GetStartedSidebar.js"],"names":["__webpack_exports__","default","props","console","log","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","className","_components_TopBar__WEBPACK_IMPORTED_MODULE_1__","_components_SyntaxHighlighter__WEBPACK_IMPORTED_MODULE_4__","_components_GetStartedSidebar__WEBPACK_IMPORTED_MODULE_2__","273","e","t","n","d","f","r","l","s","o","i","c","u","m","p","h","y","g","Object","react_syntax_highlighter_prism_light__WEBPACK_IMPORTED_MODULE_5__","registerLanguage","react_syntax_highlighter_languages_prism_jsx__WEBPACK_IMPORTED_MODULE_6___default","SyntaxHighlighterComponent","render","_this$props","this","children","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3___default","react_syntax_highlighter_prism_light__WEBPACK_IMPORTED_MODULE_5___default","assign","language","style","react_syntax_highlighter_styles_prism_prism__WEBPACK_IMPORTED_MODULE_7___default","Component","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_4___default","string","Sidebar","groups","map","group","key","title","links","label","_ref","to","exact","gatsby__WEBPACK_IMPORTED_MODULE_5__","activeClassName","react__WEBPACK_IMPORTED_MODULE_3__","PureComponent","node","arrayOf","shape","bool","defaultProps","GetStartedSidebar","react__WEBPACK_IMPORTED_MODULE_2___default","_Sidebar__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-get-started-theming-js-d5677b64cb0eb3758397.js","sourcesContent":["import React from 'react'\nimport TopBar from '../../components/TopBar'\nimport GetStartedSidebar from '../../components/GetStartedSidebar'\nimport Layout from '../../components/Layout'\nimport SyntaxHighlighter from '../../components/SyntaxHighlighter'\n\nexport default props => {\n  console.log(props)\n  return (\n    <Layout>\n      <div className=\"MainLayout\">\n        <TopBar />\n        <main className=\"MainLayout-main\">\n          <div className=\"MainLayout-content\">\n            <section className=\"Container\">\n              <div className=\"Content\">\n                <h1>Theming</h1>\n                <p>\n                  {\"Support for theming is currrently in it's early stages.\"}\n                </p>\n\n                <h2>Two types of themes</h2>\n\n                <p>\n                  {'Themes are composed of two parts: a \"style\" and a \"base\".'}\n                </p>\n\n                <p>\n                  A <b>style</b> contains colors and fonts that you can use to\n                  easily insert your own branding into Evergreen.\n                </p>\n\n                <SyntaxHighlighter>\n                  {`// Example styles\n\nconst style = {\n  primaryColor: \"#016cd1\",\n  ...\n}\n`}\n                </SyntaxHighlighter>\n\n                <p>\n                  A <b>base</b> is an optional piece that allows you to override\n                  several utility functions within evergreen.\n                  {\n                    \"It's not recommended to use a base for something a style can acomplish.\"\n                  }\n                </p>\n\n                <SyntaxHighlighter>\n                  {`// Example Base\n\nconst base = {\n  getCodeProps: myGetCodePropsFunction,\n  getSelectClassName: myGetSelectClassNameFunction,\n  ...\n}\n`}\n                </SyntaxHighlighter>\n\n                <h3>Usage</h3>\n                <p>\n                  Combined, these two pieces let you change small details or\n                  rewrite some of the more opinionated pieces of Evergreen.\n                </p>\n\n                <SyntaxHighlighter>\n                  {`import { createTheme, ThemeProvider } from 'evergreen-ui'\n\nconst theme = createTheme(style, base)\n\nexport default (\n    <ThemeProvider theme={theme}>\n      <MyApp />\n    </ThemeProvider>\n)\n`}\n                </SyntaxHighlighter>\n              </div>\n            </section>\n          </div>\n          <GetStartedSidebar />\n        </main>\n      </div>\n    </Layout>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport SyntaxHighlighter, {\n  registerLanguage\n} from 'react-syntax-highlighter/prism-light'\nimport jsx from 'react-syntax-highlighter/languages/prism/jsx'\nimport prism from 'react-syntax-highlighter/styles/prism/prism'\n\nregisterLanguage('jsx', jsx)\n\nexport default class SyntaxHighlighterComponent extends React.Component {\n  static propTypes = {\n    children: PropTypes.string\n  }\n\n  render() {\n    const { children, ...props } = this.props\n    return (\n      <SyntaxHighlighter language=\"javascript\" style={prism} {...props}>\n        {children}\n      </SyntaxHighlighter>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nexport default class Sidebar extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node,\n    groups: PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.string,\n        exact: PropTypes.bool,\n        links: PropTypes.arrayOf(\n          PropTypes.shape({\n            to: PropTypes.string,\n            label: PropTypes.string\n          })\n        )\n      })\n    )\n  }\n\n  static defaultProps = {\n    groups: []\n  }\n\n  render() {\n    const { children, groups, ...props } = this.props\n    return (\n      <aside className=\"MainLayout-sidebar Sidebar\" {...props}>\n        <div className=\"Sidebar-inner\">\n          {groups.map(group => {\n            return (\n              <div\n                key={group.title || group.links[0].label}\n                className=\"NavGroup\"\n              >\n                {group.title && (\n                  <h3 className=\"NavGroup-title\">{group.title}</h3>\n                )}\n                <nav className=\"NavGroup-nav\">\n                  {group.links.map(({ label, to, exact }) => (\n                    <Link\n                      key={to}\n                      activeClassName=\"is-active\"\n                      to={to}\n                      exact={exact}\n                    >\n                      {label}\n                    </Link>\n                  ))}\n                </nav>\n              </div>\n            )\n          })}\n        </div>\n      </aside>\n    )\n  }\n}\n","import React, { PureComponent } from 'react'\nimport Sidebar from './Sidebar'\n\nexport default class GetStartedSidebar extends PureComponent {\n  static propTypes = {\n    ...Sidebar.propTypes\n  }\n\n  static defaultProps = {\n    /**\n     * Manually manage components for now\n     */\n    groups: [\n      {\n        title: 'Get Started',\n        links: [\n          {\n            to: '/get-started/introduction',\n            label: 'Introduction'\n          },\n          {\n            to: '/get-started/theming',\n            label: 'Theming'\n          }\n        ]\n      }\n    ]\n  }\n\n  render() {\n    return <Sidebar {...this.props} />\n  }\n}\n"],"sourceRoot":""}