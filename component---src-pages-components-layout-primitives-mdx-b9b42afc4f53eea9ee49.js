(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{EZSg:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return l})),t.d(n,"default",(function(){return p}));var a=t("zLVn"),r=(t("mXGw"),t("7ljp")),o=t("uVCN"),i=t("Ob+p"),l={},c={_frontmatter:l},s=o.a;function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(r.b)(s,Object.assign({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",null,"Introduction"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Card")," components are one of the most important components in Evergreen.\nThey are used as primitives to construct layouts and compose components.\nIn most cases you can use a ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," instead of a ",Object(r.b)("inlineCode",{parentName:"p"},"div")," element."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Card")," components map almost directly to the ",Object(r.b)("inlineCode",{parentName:"p"},"Box")," from ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/segmentio/ui-box"}),Object(r.b)("inlineCode",{parentName:"a"},"ui-box")),".\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"Box")," component is a UI Primitive component that is used as the base of many components in Evergreen."),Object(r.b)("p",null,"Besides the ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Card")," component, most other components use ",Object(r.b)("inlineCode",{parentName:"p"},"Box")," or ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," as well."),Object(r.b)("h2",null,"What is a React UI Primitive?"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Box"),' component is a base component or "UI primitive" for creating layouts and composing components.\nMany components within Evergreen use the ',Object(r.b)("inlineCode",{parentName:"p"},"Box")," component instead of a element such as ",Object(r.b)("inlineCode",{parentName:"p"},"div")," or ",Object(r.b)("inlineCode",{parentName:"p"},"button"),"."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Box")," component is useful because it helps with 3 common use cases"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Create layouts without helper classes.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Define components without worrying about CSS.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Override single properties when using components."))),Object(r.b)("h3",null,"You don’t need ",Object(r.b)("inlineCode",{parentName:"h3"},"className")),Object(r.b)("p",null,"In Evergreen most of the time you don’t deal with CSS classes through the ",Object(r.b)("inlineCode",{parentName:"p"},"className")," property.\nInstead, you write CSS properties directly onto your Evergreen components —\nin most cases it will just work."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"If you know what you are doing and do need to use CSS directly, be aware that mixing\nEvergreen with regular CSS might give you unexpected results.")),Object(r.b)("h4",null,"When to use inline styles?"),Object(r.b)("p",null,"In some cases you still want to use inline styles.\nThe most common use cases is when you are animating a CSS property and the value is always different."),Object(r.b)("h2",null,"Creating layouts with Pane"),Object(r.b)("p",null,"Use the ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," component to create your layouts.\nMost CSS properties are supported on the ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," component."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'// import { Pane, Text } from \'evergreen-ui\'\n\n<Pane\n  height={120}\n  width={240}\n  display="flex"\n  alignItems="center"\n  justifyContent="center"\n  border="default"\n>\n  <Text>Pane</Text>\n</Pane>\n\n')),Object(r.b)("h2",null,"Override single properties when using Evergreen components"),Object(r.b)("p",null,"Most components in Evergreen use a ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," or ",Object(r.b)("inlineCode",{parentName:"p"},"Box")," under the hood.\nTo add spacing, or layout properties, pass the properties straight to the component:"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'// import { Pane, Button, Text, Heading } from \'evergreen-ui\'\n\n<Pane display="flex" padding={16} background="tint2" borderRadius={3}>\n  <Pane flex={1} alignItems="center" display="flex">\n    <Heading size={600}>Left Aligned</Heading>\n  </Pane>\n  <Pane>\n    {/* Below you can see the marginRight property on a Button. */}\n    <Button marginRight={16}>Button</Button>\n    <Button appearance="primary">Primary Button</Button>\n  </Pane>\n</Pane>\n')),Object(r.b)("h2",null,"Use the height property to resize components"),Object(r.b)("p",null,"In most cases in Evergreen you can use the ",Object(r.b)("inlineCode",{parentName:"p"},"height")," property on components to change the size\nof a component. The text styles and padding will adjust based on the height you pass."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'// import { Pane, Button, TextInput } from \'evergreen-ui\'\n\n<Pane display="flex">\n  <TextInput width="100%" height={48} placeholder="Change my height to fit your needs." />\n  <Button height={48} appearance="primary" marginLeft={16}>Big Button</Button>\n</Pane>\n')),Object(r.b)("h3",null,"Recommendation: Use the 8px major scale grid"),Object(r.b)("p",null,"We recommend using values for heights, widths, margins, paddings that are always divisible by ",Object(r.b)("inlineCode",{parentName:"p"},"8"),".\nWithin Evergreen we call this the major scale."),Object(r.b)("h4",null,"Evergreen exports a utility called ",Object(r.b)("inlineCode",{parentName:"h4"},"majorScale")," to help conform to the 8px major scale."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"majorScale(1) => 8")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"majorScale(2) => 16")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"majorScale(3) => 24")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"majorScale(4) => 32")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"majorScale(5) => 40"))),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"// import { majorScale, Button } from 'evergreen-ui'\n\n<Button height={majorScale(5)}>Big Button</Button>\n")),Object(r.b)("h4",null,"Use the 4px minor scale grid for values under 40px"),Object(r.b)("p",null,"We recommend only using the 4px grid for values under ",Object(r.b)("inlineCode",{parentName:"p"},"40"),".\nTry making your designs work with the major scale first before using the minor scale.\nWe recommend using the minor scale primarily for spacing only when the major scale is too much."),Object(r.b)("p",null,"For example: ",Object(r.b)("inlineCode",{parentName:"p"},"4"),", ",Object(r.b)("inlineCode",{parentName:"p"},"12"),", ",Object(r.b)("inlineCode",{parentName:"p"},"20")," are fine to use.\nBut avoid using ",Object(r.b)("inlineCode",{parentName:"p"},"52"),"."),Object(r.b)("h4",null,"Evergreen exports a utility called ",Object(r.b)("inlineCode",{parentName:"h4"},"minorScale")," to help conform to the 4px minor scale."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"minorScale(1) => 4")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"minorScale(3) => 12")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"minorScale(5) => 20")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"minorScale(7) => 28")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"minorScale(9) => 36"))),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"// import { minorScale, Button } from 'evergreen-ui'\n\n<Pane>\n  <Button marginRight={minorScale(3)}>Button</Button>\n  <Button>Button</Button>\n</Pane>\n")),Object(r.b)("h2",null,"Responsive layouts"),Object(r.b)("p",null,"Currently there is no opinionated way to construct responsive layouts in Evergreen.\nIn the case of responsive layouts you might want to simply use a div with a class name and use breakpoints in CSS — or potentially a CSS-in-JS solution."),Object(r.b)("p",null,"In the case when you need to pass properties to a Evergreen component based on the viewport,\nyou can try something like react-component-queries."),Object(r.b)("h2",null,"Never pass a string of text as direct children"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Pane")," & ",Object(r.b)("inlineCode",{parentName:"p"},"Card")," don’t have text styles applied to them.\nAlways use a ",Object(r.b)("inlineCode",{parentName:"p"},"Text"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Heading")," or other typography component as children to Panes & Cards."),Object(r.b)("h1",null,"Pane component"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," component maps almost directly to the ",Object(r.b)("inlineCode",{parentName:"p"},"Box")," from ",Object(r.b)("inlineCode",{parentName:"p"},"ui-box"),".\nThis means you can pass everything to ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," that you can pass to ",Object(r.b)("inlineCode",{parentName:"p"},"Box"),".\nRead more above to learn about this."),Object(r.b)("p",null,"Because the ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," component directly maps to a ",Object(r.b)("inlineCode",{parentName:"p"},"Box")," you can pass almost any CSS property directly to the React component."),Object(r.b)("h2",null,"Basic ",Object(r.b)("inlineCode",{parentName:"h2"},"Pane")," example"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Pane\n  is="section"\n  ref={(ref) => console.log(ref)}\n  background="tint2"\n  border="muted"\n  marginLeft={12}\n  marginY={24}\n  paddingTop={12}\n  paddingX={40}\n  width={120}\n  height={120}\n  cursor="help"\n  onClick={() => alert(\'Works just like expected\')}\n/>\n')),Object(r.b)("h2",null,"Elevation styles"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Panes")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Cards")," have a ",Object(r.b)("inlineCode",{parentName:"p"},"elevation")," property to give the\ncomponent a box shadow and visually elevate it from the page."),Object(r.b)("p",null,"Most commonly you will be only using ",Object(r.b)("inlineCode",{parentName:"p"},"0"),", ",Object(r.b)("inlineCode",{parentName:"p"},"1")," and ",Object(r.b)("inlineCode",{parentName:"p"},"2"),"."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Pane clearfix>\n  <Pane\n    elevation={0}\n    float="left"\n    backgroundColor="white"\n    width={200}\n    height={120}\n    margin={24}\n    display="flex"\n    justifyContent="center"\n    alignItems="center"\n    flexDirection="column"\n  >\n    <Text>Elevation 0</Text>\n    <Text size={300}>Flat Panes</Text>\n  </Pane>\n  <Pane\n    elevation={1}\n    float="left"\n    width={200}\n    height={120}\n    margin={24}\n    display="flex"\n    justifyContent="center"\n    alignItems="center"\n    flexDirection="column"\n  >\n    <Text>Elevation 1</Text>\n    <Text size={300}>Floating Panes</Text>\n  </Pane>\n</Pane>\n')),Object(r.b)("h3",null,"All elevation options"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"collapse",collapse:!0}),'<Pane clearfix>\n  <Pane\n    elevation={0}\n    float="left"\n    backgroundColor="white"\n    width={200}\n    height={120}\n    margin={24}\n    display="flex"\n    justifyContent="center"\n    alignItems="center"\n    flexDirection="column"\n  >\n    <Text>Elevation 0</Text>\n    <Text size={300}>Flat Panes</Text>\n  </Pane>\n  <Pane\n    elevation={1}\n    float="left"\n    width={200}\n    height={120}\n    margin={24}\n    display="flex"\n    justifyContent="center"\n    alignItems="center"\n    flexDirection="column"\n  >\n    <Text>Elevation 1</Text>\n    <Text size={300}>Floating Panes</Text>\n  </Pane>\n  <Pane\n    elevation={2}\n    float="left"\n    width={200}\n    height={120}\n    margin={24}\n    display="flex"\n    justifyContent="center"\n    alignItems="center"\n    flexDirection="column"\n  >\n    <Text>Elevation 2</Text>\n    <Text size={300}>Popovers and Dropdowns</Text>\n  </Pane>\n  <Pane\n    elevation={3}\n    float="left"\n    width={200}\n    height={120}\n    margin={24}\n    display="flex"\n    justifyContent="center"\n    alignItems="center"\n    flexDirection="column"\n  >\n    <Text>Elevation 3</Text>\n    <Text size={300}>Toasts</Text>\n  </Pane>\n  <Pane\n    elevation={4}\n    float="left"\n    width={200}\n    height={120}\n    margin={24}\n    display="flex"\n    justifyContent="center"\n    alignItems="center"\n    flexDirection="column"\n  >\n    <Text>Elevation 4</Text>\n    <Text size={300}>Dialog</Text>\n  </Pane>\n</Pane>\n')),Object(r.b)("h2",null,"Background colors"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"background")," property on a ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," is special.\nYou have access to all of the colors defined in the theme objects."),Object(r.b)("h3",null,"Use ",Object(r.b)("inlineCode",{parentName:"h3"},"tint1")," and ",Object(r.b)("inlineCode",{parentName:"h3"},"tint2")," for slight gray backgrounds"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Pane>\n  <Pane background="tint1" padding={24} marginBottom={16}><Text>tint1</Text></Pane>\n  <Pane background="tint2" padding={24} ><Text>tint2</Text></Pane>\n</Pane>\n')),Object(r.b)("h3",null,"All possible options for the background color"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"collapse",collapse:!0}),'<ThemeConsumer>\n  {theme => (\n    <Pane clearfix>\n      {Object.keys(theme.colors.background).map(background => (\n        <Pane\n          key={background}\n          background={background}\n          float="left"\n          width={120}\n          height={120}\n          margin={24}\n          display="flex"\n          alignItems="center"\n          justifyContent="center"\n        >\n          <Text color="default">{background}</Text>\n        </Pane>\n      ))}\n    </Pane>\n  )}\n</ThemeConsumer>\n')),Object(r.b)("h2",null,"Border colors"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"border")," property on a ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," is special.\nYou have access to all of the colors defined in the theme objects."),Object(r.b)("p",null,"Possible values are ",Object(r.b)("inlineCode",{parentName:"p"},"default")," or ",Object(r.b)("inlineCode",{parentName:"p"},"muted"),". If you pass the ",Object(r.b)("inlineCode",{parentName:"p"},"border")," property as a boolean\nit will use the ",Object(r.b)("inlineCode",{parentName:"p"},"default")," option."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),'<Pane clearfix>\n  <Pane border width={120} height={80} marginRight={16} float="left" />\n  <Pane border="default" width={120} height={80} marginRight={16} float="left" />\n  <Pane border="muted" width={120} height={80} marginRight={16} float="left" />\n</Pane>\n')),Object(r.b)("p",null,"All border sides are supported on a ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx"}),"<Pane borderTop borderRight borderLeft borderBottom width={120} height={80} />\n")),Object(r.b)("h3",null,"All possible options for the border color"),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-jsx",metastring:"collapse",collapse:!0}),'<ThemeConsumer>\n  {theme => (\n    <Pane clearfix>\n      {Object.keys(theme.colors.border).map(borderColor => (\n        <Pane key={borderColor} overflow="auto">\n          <Pane\n            borderTop={borderColor}\n            float="left"\n            width={160}\n            height={120}\n            margin={24}\n            display="flex"\n            alignItems="center"\n            justifyContent="center"\n          >\n            <Text color="default">borderTop: {borderColor}</Text>\n          </Pane>\n          <Pane\n            borderRight={borderColor}\n            float="left"\n            width={160}\n            height={120}\n            margin={24}\n            display="flex"\n            alignItems="center"\n            justifyContent="center"\n          >\n            <Text color="default">borderRight: {borderColor}</Text>\n          </Pane>\n          <Pane\n            borderBottom={borderColor}\n            float="left"\n            width={160}\n            height={120}\n            margin={24}\n            display="flex"\n            alignItems="center"\n            justifyContent="center"\n          >\n            <Text color="default">borderBottom: {borderColor}</Text>\n          </Pane>\n          <Pane\n            borderLeft={borderColor}\n            float="left"\n            width={160}\n            height={120}\n            margin={24}\n            display="flex"\n            alignItems="center"\n            justifyContent="center"\n          >\n            <Text color="default">borderLeft: {borderColor}</Text>\n          </Pane>\n        </Pane>\n      ))}\n    </Pane>\n  )}\n</ThemeConsumer>\n')),Object(r.b)(i.a,{of:"Pane",mdxType:"PropsTable"}),Object(r.b)("h1",null,"Card component"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Card")," component is exactly the same as the ",Object(r.b)("inlineCode",{parentName:"p"},"Pane")," component.\nThe only difference is that the ",Object(r.b)("inlineCode",{parentName:"p"},"Card")," has a ",Object(r.b)("inlineCode",{parentName:"p"},"borderRadius")," by default."))}p.isMDXComponent=!0},"Ob+p":function(e,n,t){"use strict";t.d(n,"a",(function(){return p}));var a=t("dI71"),r=t("mXGw"),o=t.n(r),i=t("Wbzz"),l=function(e){function n(){return e.apply(this,arguments)||this}return Object(a.a)(n,e),n.prototype.render=function(){var e=this.props.children;return o.a.createElement("div",{className:"PropTypeWrapper"},e)},n}(r.PureComponent),c=function(e){function n(){return e.apply(this,arguments)||this}return Object(a.a)(n,e),n.prototype.render=function(){var e=this.props.children;return o.a.createElement("div",{className:"PropTypeDescription"},e)},n}(r.PureComponent),s=function(e){function n(){return e.apply(this,arguments)||this}return Object(a.a)(n,e),n.prototype.render=function(){var e=this.props,n=e.defaultValue,t=e.name,a=e.required,r=e.type,i=e.isArrayOf;return o.a.createElement("div",{className:"PropTypeHeading"},o.a.createElement("code",null,o.a.createElement("span",{className:"PropTypeHeading-name"},t),o.a.createElement("span",{className:"PropTypeHeading-propType"},function e(n){var t=n.name,a=n.value;switch(t){case"enum":return a.map((function(e){return e.value})).join(" | ");case"union":return a.map((function(n){return e(n)})).join(" | ");case"arrayOf":return"Array<"+e(a)+">";case"shape":return"object"==typeof a?"{ "+Object.keys(a).map((function(n){return n+(a[n].required?"":"?")+": "+e(a[n])})).join(", ")+" }":a;default:return t}}(r)),i&&o.a.createElement("span",{className:"PropTypeHeading-arrayOf"},i)),n?o.a.createElement("code",{className:"PropTypeHeading-defaultValue"}," ","= ",n.value):null,a?o.a.createElement("span",{className:"PropTypeHeading-required"},"required"):null)},n}(r.PureComponent),p=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return(n=e.call.apply(e,[this].concat(a))||this).isArrayOf=function(e){if(e.type&&"arrayOf"===e.type.name&&"object"==typeof e.type.value&&"string"==typeof e.type.value.raw)return e.type.value.raw},n.getDocsForComponent=function(e){var t=e.allComponentMetadata.edges.find((function(e){return e.node.displayName===n.props.of}));return t?t.node:null},n}return Object(a.a)(n,e),n.prototype.render=function(){var e=this;return o.a.createElement(i.b,{query:"3894714669",render:function(n){var t=e.getDocsForComponent(n);return t?o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"Content"},o.a.createElement("h2",{className:"h2"},o.a.createElement("code",{className:"code"},e.props.rename||t.displayName)," ","Props"),t&&t.composes&&t.composes.length>0&&o.a.createElement("div",{className:"PropTypesTable-composes"},o.a.createElement("p",null,o.a.createElement("strong",null,"This component composes "),t.composes.map((function(e){return o.a.createElement("code",{key:e},e.slice(e.indexOf("/")+1))}))))),t.props.map((function(n){var t=e.isArrayOf(n);return o.a.createElement(l,{key:n.name},o.a.createElement(s,{name:n.name,required:n.required,defaultValue:n.defaultValue,type:n.type||{},isArrayOf:t}),n.docblock?o.a.createElement(c,null,n.docblock):null)}))):o.a.createElement("div",null,o.a.createElement("p",null,"The properties table for this component can’t be rendered at the moment, due to a bug."))}})},n}(r.PureComponent)},uVCN:function(e,n,t){"use strict";t.d(n,"a",(function(){return P}));var a=t("dI71"),r=t("rePB"),o=t("KQm4"),i=t("mXGw"),l=t.n(i),c=t("qhky"),s=t("Wbzz"),p=t("YwZP"),b=t("ruUZ"),m=t("Onqc"),u=t("vMZD"),d=t("552S"),h=t("fUAp"),g=t("hPyG"),j=t("zngv"),O=t("7oih"),f=t("Whaq"),y=t("nD8F");function C(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function N(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?C(Object(t),!0).forEach((function(n){Object(r.a)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):C(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var v=[].concat(Object(o.a)(h.a.foundation.items.map((function(e){return N(N({},e),{},{related:[].concat(Object(o.a)(e.related||[]),Object(o.a)(h.a.foundation.items.map((function(e){return e.id})).filter((function(n){return n!==e.id}))))})}))),Object(o.a)(h.a.components.items.reduce((function(e,n){return[].concat(Object(o.a)(e),Object(o.a)(n.items.map((function(e){return N(N({},e),{},{related:[].concat(Object(o.a)(e.related||[]),Object(o.a)(n.items.map((function(e){return e.id})).filter((function(n){return n!==e.id}))))})}))))}),[]))),x=function(e){function n(){for(var n,t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return(n=e.call.apply(e,[this].concat(a))||this).getMetaInfo=function(){var e=n.props.location.pathname.split("/")[2];return v.find((function(n){return n.id===e}))},n.getRelatedItems=function(e){return(e.related||[]).map((function(e){return v.find((function(n){return n.id===e}))}))},n}Object(a.a)(n,e);var t=n.prototype;return t.componentDidCatch=function(e,n){console.error(e,n)},t.render=function(){var e=this.getMetaInfo();if(!e)return null;var n=this.getRelatedItems(e);return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,null,l.a.createElement("title",null,e.name," · Evergreen"),l.a.createElement("meta",{property:"og:title",content:e.name+" · Evergreen"}),l.a.createElement("meta",{property:"twitter:title",content:e.name+" · Evergreen"})),l.a.createElement("div",null,l.a.createElement(j.a,null),l.a.createElement("main",null,l.a.createElement("article",{className:"MDXPage"},l.a.createElement("header",{className:"MDXPage-header"},l.a.createElement("div",{className:"bg-tint1"},l.a.createElement("div",{className:"MDXPage-headerContent Container Container--narrow"},l.a.createElement("div",{className:"MDXPage-headerContentLeft"},l.a.createElement(b.a,{content:"Back to Overview"},l.a.createElement(m.a,{autoFocus:!0,onClick:function(){Object(p.navigate)("/components")},marginLeft:-54,marginRight:16,display:"inline-flex",icon:u.a,height:40})),l.a.createElement("h1",null,e.name)),l.a.createElement(d.a,{is:"a",height:40,href:e.github,target:"_blank"},"View on GitHub")))),l.a.createElement("div",{className:"Container Container--narrow",style:{marginBottom:120}},l.a.createElement(g.a,null,this.props.children))),n.length>0&&l.a.createElement("div",{className:"Overview-group Container Container--narrow",style:{marginBottom:120}},l.a.createElement("h3",{className:"Overview-groupTitle"},"Related"),l.a.createElement("div",{className:"Overview-groupItems"},n.map((function(e){return l.a.createElement(f.a,{key:e.name,id:e.id,image:e.image},e.name)})))),l.a.createElement("div",{className:"Container Container--narrow",style:{marginBottom:120}},l.a.createElement(d.a,{is:s.a,to:"/components",display:"inline-flex",iconBefore:u.a,height:40},"Back to Overview")))),l.a.createElement(y.a,null))},n}(l.a.Component),P=function(e){function n(){return e.apply(this,arguments)||this}return Object(a.a)(n,e),n.prototype.render=function(){var e=this;return l.a.createElement(O.a,null,l.a.createElement(p.Location,null,(function(n){var t=n.location;return l.a.createElement(x,Object.assign({location:t},e.props))})))},n}(l.a.Component)}}]);
//# sourceMappingURL=component---src-pages-components-layout-primitives-mdx-b9b42afc4f53eea9ee49.js.map